<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2020-08-16T15:36:41</timestamp>
        <product version="5.44.0.10087" user="rhalyc gar" serial="297344-391">Dotfuscator Community</product>
    </header>
    <mapping>
        <module>
            <name>winPEAS.exe</name>
            <type>
                <arity>4</arity>
                <genericparameter sequence="0">
                    <name>&lt;Proc&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Pth&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;CommLine&gt;j__TPar</name>
                    <newname>c</newname>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;Owner&gt;j__TPar</name>
                    <newname>d</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`4</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_CommLine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_Owner</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Proc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Pth</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;CommLine&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;Owner&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Proc&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Pth&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!2()</signature>
                        <name>CommLine</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>Owner</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>Proc</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>Pth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;A&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;B&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`2</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_A</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_B</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;A&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;B&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>A</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>B</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>3</arity>
                <genericparameter sequence="0">
                    <name>&lt;A&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;B&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;C&gt;j__TPar</name>
                    <newname>c</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType2`3</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_A</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_B</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_C</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;A&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;B&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;C&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>A</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>B</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>C</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>5</arity>
                <genericparameter sequence="0">
                    <name>&lt;A&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;B&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;C&gt;j__TPar</name>
                    <newname>c</newname>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;D&gt;j__TPar</name>
                    <newname>d</newname>
                </genericparameter>
                <genericparameter sequence="4">
                    <name>&lt;E&gt;j__TPar</name>
                    <newname>e</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType3`5</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3, !4)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_A</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_B</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_C</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_D</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>!4()</signature>
                        <name>get_E</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;A&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;B&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;C&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;D&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!4</signature>
                        <name>&lt;E&gt;i__Field</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>A</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>B</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>C</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>D</name>
                    </property>
                    <property>
                        <signature>!4()</signature>
                        <name>E</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>9</arity>
                <genericparameter sequence="0">
                    <name>&lt;A&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;B&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;C&gt;j__TPar</name>
                    <newname>c</newname>
                </genericparameter>
                <genericparameter sequence="3">
                    <name>&lt;D&gt;j__TPar</name>
                    <newname>d</newname>
                </genericparameter>
                <genericparameter sequence="4">
                    <name>&lt;E&gt;j__TPar</name>
                    <newname>e</newname>
                </genericparameter>
                <genericparameter sequence="5">
                    <name>&lt;F&gt;j__TPar</name>
                    <newname>f</newname>
                </genericparameter>
                <genericparameter sequence="6">
                    <name>&lt;G&gt;j__TPar</name>
                    <newname>g</newname>
                </genericparameter>
                <genericparameter sequence="7">
                    <name>&lt;H&gt;j__TPar</name>
                    <newname>h</newname>
                </genericparameter>
                <genericparameter sequence="8">
                    <name>&lt;I&gt;j__TPar</name>
                    <newname>i</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType4`9</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2, !3, !4, !5, !6, !7, !8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_A</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_B</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_C</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>!3()</signature>
                        <name>get_D</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>!4()</signature>
                        <name>get_E</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>!5()</signature>
                        <name>get_F</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>!6()</signature>
                        <name>get_G</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>!7()</signature>
                        <name>get_H</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>!8()</signature>
                        <name>get_I</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;A&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;B&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;C&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!3</signature>
                        <name>&lt;D&gt;i__Field</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>!4</signature>
                        <name>&lt;E&gt;i__Field</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>!5</signature>
                        <name>&lt;F&gt;i__Field</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>!6</signature>
                        <name>&lt;G&gt;i__Field</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>!7</signature>
                        <name>&lt;H&gt;i__Field</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>!8</signature>
                        <name>&lt;I&gt;i__Field</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>A</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>B</name>
                    </property>
                    <property>
                        <signature>!2()</signature>
                        <name>C</name>
                    </property>
                    <property>
                        <signature>!3()</signature>
                        <name>D</name>
                    </property>
                    <property>
                        <signature>!4()</signature>
                        <name>E</name>
                    </property>
                    <property>
                        <signature>!5()</signature>
                        <name>F</name>
                    </property>
                    <property>
                        <signature>!6()</signature>
                        <name>G</name>
                    </property>
                    <property>
                        <signature>!7()</signature>
                        <name>H</name>
                    </property>
                    <property>
                        <signature>!8()</signature>
                        <name>I</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;</name>
                <newname>cn</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int32(string)</signature>
                        <name>ComputeStringHash</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>09B384B0D8FACA85FE6E86EE372D2FDF44FEDC0A</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=10</signature>
                        <name>C6BF88811CDFBDBDAD9B3A48A826C4BE8FE10B74</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=10</name>
                <newname>cn/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</name>
                <newname>cn/b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.AssertionConditionAttribute</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.AssertionMethodAttribute</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.BaseTypeRequiredAttribute</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_BaseType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_BaseType</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;BaseType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.CanBeNullAttribute</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.ImplicitUseKindFlags</name>
                <newname>o</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>Access</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>Assign</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>Default</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>InstantiatedNoFixedConstructorSignature</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>InstantiatedWithFixedConstructorSignature</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.ImplicitUseTargetFlags</name>
                <newname>p</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags</signature>
                        <name>Default</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags</signature>
                        <name>Itself</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags</signature>
                        <name>Members</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags</signature>
                        <name>WithMembers</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.ItemNotNullAttribute</name>
                <newname>k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.MacroAttribute</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Editable</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Expression</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Target</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Editable</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Expression</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Target</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Editable&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Expression&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Target&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.MeansImplicitUseAttribute</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseKindFlags, JetBrains.Annotations.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags()</signature>
                        <name>get_TargetFlags</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags()</signature>
                        <name>get_UseKindFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseTargetFlags)</signature>
                        <name>set_TargetFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseKindFlags)</signature>
                        <name>set_UseKindFlags</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags</signature>
                        <name>&lt;TargetFlags&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>&lt;UseKindFlags&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.NotNullAttribute</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.PublicAPIAttribute</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.SourceTemplateAttribute</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>JetBrains.Annotations.UsedImplicitlyAttribute</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseKindFlags, JetBrains.Annotations.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags()</signature>
                        <name>get_TargetFlags</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags()</signature>
                        <name>get_UseKindFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseTargetFlags)</signature>
                        <name>set_TargetFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(JetBrains.Annotations.ImplicitUseKindFlags)</signature>
                        <name>set_UseKindFlags</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseTargetFlags</signature>
                        <name>&lt;TargetFlags&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>JetBrains.Annotations.ImplicitUseKindFlags</signature>
                        <name>&lt;UseKindFlags&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CloseHandle</name>
                    </method>
                    <method>
                        <signature>void(string, string, native int&amp;)</signature>
                        <name>DsBind</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, Microsoft.Win32.NativeMethods/DS_NAME_FLAGS, Microsoft.Win32.NativeMethods/DS_NAME_FORMAT, Microsoft.Win32.NativeMethods/DS_NAME_FORMAT, unsigned int32, string[], native int&amp;)</signature>
                        <name>DsCrackNames</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>DsFreeNameResult</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int&amp;)</signature>
                        <name>DsUnBind</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string, int32, int32, Microsoft.Win32.NativeMethods/SafeTokenHandle&amp;)</signature>
                        <name>LogonUser</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ADVAPI32</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>KERNEL32</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTDSAPI</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</name>
                <newname>v/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_DOMAIN_ONLY</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_NOT_FOUND</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_NOT_UNIQUE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_NO_MAPPING</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_RESOLVING</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_ERROR_TRUST_REFERRAL</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>DS_NAME_NO_ERROR</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/DS_NAME_FLAGS</name>
                <newname>v/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FLAGS</signature>
                        <name>DS_NAME_FLAG_EVAL_AT_DC</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FLAGS</signature>
                        <name>DS_NAME_FLAG_GCVERIFY</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FLAGS</signature>
                        <name>DS_NAME_FLAG_SYNTACTICAL_ONLY</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FLAGS</signature>
                        <name>DS_NAME_FLAG_TRUST_REFERRAL</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FLAGS</signature>
                        <name>DS_NAME_NO_FLAGS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</name>
                <newname>v/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_CANONICAL_NAME</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_CANONICAL_NAME_EX</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_DISPLAY_NAME</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_FQDN_1779_NAME</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_NT4_ACCOUNT_NAME</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_SERVICE_PRINCIPAL_NAME</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_SID_OR_SID_HISTORY_NAME</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_UNIQUE_ID_NAME</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_UNKNOWN_NAME</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_FORMAT</signature>
                        <name>DS_USER_PRINCIPAL_NAME</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/DS_NAME_RESULT</name>
                <newname>v/f</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_RESULT_ITEM[]()</signature>
                        <name>get_Items</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cItems</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>rItems</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/DS_NAME_RESULT_ITEM</name>
                <newname>v/g</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>pDomain</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_ERROR</signature>
                        <name>status</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/DomainService</name>
                <newname>v/e</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>CrackName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.NativeMethods/DS_NAME_RESULT_ITEM[](string[], Microsoft.Win32.NativeMethods/DS_NAME_FLAGS, Microsoft.Win32.NativeMethods/DS_NAME_FORMAT, Microsoft.Win32.NativeMethods/DS_NAME_FORMAT)</signature>
                        <name>CrackNames</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>handle</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/SYSTEMTIME</name>
                <newname>v/h</newname>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.TypeCode()</signature>
                        <name>System.IConvertible.GetTypeCode</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToBoolean</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToByte</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>char(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToChar</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToDateTime</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Decimal(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToDecimal</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>float64(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToDouble</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int16(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToInt16</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>int32(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToInt32</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>int64(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToInt64</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>int8(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToSByte</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>float32(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToSingle</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToString</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>object(System.Type, System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToType</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int16(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToUInt16</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToUInt32</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>unsigned int64(System.IFormatProvider)</signature>
                        <name>System.IConvertible.ToUInt64</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.NativeMethods/SYSTEMTIME, Microsoft.Win32.NativeMethods/SYSTEMTIME)</signature>
                        <name>op_Equality</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.NativeMethods/SYSTEMTIME(System.DateTime)</signature>
                        <name>op_Implicit</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(Microsoft.Win32.NativeMethods/SYSTEMTIME)</signature>
                        <name>op_Implicit</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.NativeMethods/SYSTEMTIME, Microsoft.Win32.NativeMethods/SYSTEMTIME)</signature>
                        <name>op_Inequality</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Day</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DayOfWeek</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Hour</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/SYSTEMTIME</signature>
                        <name>MaxValue</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Milliseconds</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/SYSTEMTIME</signature>
                        <name>MinValue</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Minute</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Month</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Second</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Year</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.NativeMethods/SafeTokenHandle</name>
                <newname>v/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(native int, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReleaseHandle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_INSUFFICIENT_BUFFER</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_NO_TOKEN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/SafeTokenHandle</signature>
                        <name>currentProcessToken</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Action</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(string, string)</signature>
                        <name>ActionFromScript</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>Bind</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>Bind</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(Microsoft.Win32.TaskScheduler.ExecAction)</signature>
                        <name>ConvertFromPowerShellAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(Microsoft.Win32.TaskScheduler.TaskActionType)</signature>
                        <name>CreateAction</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>CreateAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(Microsoft.Win32.TaskScheduler.V2Interop.IAction)</signature>
                        <name>CreateAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection)</signature>
                        <name>CreateV2Action</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Type(Microsoft.Win32.TaskScheduler.TaskActionType)</signature>
                        <name>GetObjectType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetPowerShellCommand</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>!!0(string, !!0)</signature>
                        <name>GetProperty</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OnPropertyChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(string, !!0)</signature>
                        <name>SetProperty</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, !!0)</signature>
                        <name>TryParse</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_ActionType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_InternalActionType</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IAction</signature>
                        <name>iAction</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;</signature>
                        <name>unboundValues</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>ActionType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Id</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>InternalActionType</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ActionCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;GetEnumerator&gt;b__47_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IAction(int32)</signature>
                        <name>&lt;GetEnumerator&gt;b__47_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(!!0)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(Microsoft.Win32.TaskScheduler.TaskActionType)</signature>
                        <name>AddNew</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConvertUnsupportedActions</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.Action[], int32, int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Action&gt;)</signature>
                        <name>Find</name>
                    </method>
                    <method>
                        <signature>int32(System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Action&gt;)</signature>
                        <name>FindIndexOf</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Action&gt;)</signature>
                        <name>FindIndexOf</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.Action&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Win32.TaskScheduler.Action&gt;()</signature>
                        <name>GetV1Actions</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveV1Actions</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.Action&gt;.Add</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.Action&gt;.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>void(System.Array, int32)</signature>
                        <name>System.Collections.ICollection.CopyTo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.ICollection.get_IsSynchronized</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.ICollection.get_SyncRoot</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.Collections.IList.Add</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>System.Collections.IList.Contains</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.Collections.IList.IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Collections.IList.Insert</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>System.Collections.IList.Remove</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.get_IsFixedSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>object(int32)</signature>
                        <name>System.Collections.IList.get_Item</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Collections.IList.set_Item</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnconvertUnsupportedActions</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Context</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Action(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption()</signature>
                        <name>get_PowerShellConversion</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportV1Conversion</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportV2Conversion</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Context</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption)</signature>
                        <name>set_PowerShellConversion</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MaxActions</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption</signature>
                        <name>psConvert</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>psV2IdRegex</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Win32.TaskScheduler.Action&gt;</signature>
                        <name>v1Actions</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection</signature>
                        <name>v2Coll</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition</signature>
                        <name>v2Def</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Context</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.Action(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption()</signature>
                        <name>PowerShellConversion</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SupportV1Conversion</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SupportV2Conversion</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.Action&gt;.IsReadOnly</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.ICollection.IsSynchronized</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.ICollection.SyncRoot</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.IsFixedSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.IsReadOnly</name>
                    </property>
                    <property>
                        <signature>object(int32)</signature>
                        <name>System.Collections.IList.Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ActionCollection/&lt;&gt;c__DisplayClass40_0</name>
                <newname>Microsoft.Win32.TaskScheduler.ActionCollection/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>&lt;Contains&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Action</signature>
                        <name>item</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ActionCollection/&lt;&gt;c__DisplayClass56_0</name>
                <newname>Microsoft.Win32.TaskScheduler.ActionCollection/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>&lt;IndexOf&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Action</signature>
                        <name>item</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.BootTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.CalendarTrigger</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(System.Xml.XmlReader)</signature>
                        <name>GetTriggerFromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader, Microsoft.Win32.TaskScheduler.Trigger, Microsoft.Win32.TaskScheduler.CalendarTrigger/CalendarXmlReader)</signature>
                        <name>ReadXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter, Microsoft.Win32.TaskScheduler.Trigger, Microsoft.Win32.TaskScheduler.CalendarTrigger/CalendarXmlWriter)</signature>
                        <name>WriteXml</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.CalendarTrigger/CalendarXmlReader</name>
                <newname>ac/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.Xml.XmlReader, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.CalendarTrigger/CalendarXmlWriter</name>
                <newname>ac/b</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.Xml.XmlWriter, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ComHandlerAction</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Guid, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection)</signature>
                        <name>CreateV2Action</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string(System.Guid)</signature>
                        <name>GetNameForCLSID</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetPowerShellCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_ClassId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_InternalActionType</name>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_ClassId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Data</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Guid()</signature>
                        <name>ClassId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ClassName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>InternalActionType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.CultureSwitcher</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>cur</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>curUI</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.CustomTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UpdateFromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>delay</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection</signature>
                        <name>nvc</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.DailyTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.set_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>ReadMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_DaysInterval</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_RandomDelay</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_DaysInterval</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_RandomDelay</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>DaysInterval</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.Delay</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>RandomDelay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>AllDays</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Friday</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Monday</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Saturday</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Sunday</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Thursday</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Tuesday</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>Wednesday</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.DebugHelper</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetDebugString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.DefaultValueExAttribute</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.EmailAction</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;get_HeaderFields&gt;b__23_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>Bind</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection)</signature>
                        <name>CreateV2Action</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetPowerShellCommand</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Prep</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, char[])</signature>
                        <name>ToPS</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string[])</signature>
                        <name>ToPS</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToUTF8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object[]()</signature>
                        <name>get_Attachments</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Bcc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Body</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Cc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_From</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection()</signature>
                        <name>get_HeaderFields</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_InternalActionType</name>
                    </method>
                    <method>
                        <signature>System.Net.Mail.MailPriority()</signature>
                        <name>get_Priority</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReplyTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Server</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subject</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_To</name>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>set_Attachments</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Bcc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Body</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Cc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_From</name>
                    </method>
                    <method>
                        <signature>void(System.Net.Mail.MailPriority)</signature>
                        <name>set_Priority</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReplyTo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Server</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subject</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_To</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ImportanceHeader</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection</signature>
                        <name>nvc</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>validateAttachments</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object[]()</signature>
                        <name>Attachments</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Bcc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Body</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Cc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>From</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection()</signature>
                        <name>HeaderFields</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>InternalActionType</name>
                    </property>
                    <property>
                        <signature>System.Net.Mail.MailPriority()</signature>
                        <name>Priority</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ReplyTo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Server</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Subject</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>To</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.EmailAction/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>&lt;GetPowerShellCommand&gt;b__45_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;ToPS&gt;b__48_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;ToPS&gt;b__49_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.EmailAction/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;object,string&gt;</signature>
                        <name>&lt;&gt;9__45_0</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__48_0</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__49_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.EventTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>Bind</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string&amp;, System.Nullable`1&lt;int32&gt;&amp;)</signature>
                        <name>GetBasic</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subscription</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection()</signature>
                        <name>get_ValueQueries</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subscription</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection</signature>
                        <name>nvc</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Subscription</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection()</signature>
                        <name>ValueQueries</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ExecAction</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>BuildPowerShellCmd</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.ExecAction(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>ConvertToPowerShellAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.ExecAction(string, string)</signature>
                        <name>CreatePowerShellAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection)</signature>
                        <name>CreateV2Action</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetPowerShellCommand</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>ParsePowerShellItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Arguments</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_InternalActionType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Arguments</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>PowerShellArgFormat</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PowerShellPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ScriptIdentifer</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Arguments</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>InternalActionType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.IBindAsExecAction</name>
                <newname>x</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ICalendarTrigger</name>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ITaskHandlerStatus</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>TaskCompleted</name>
                    </method>
                    <method>
                        <signature>void(int16, string)</signature>
                        <name>UpdateStatus</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ITriggerDelay</name>
                <methodlist>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ITriggerUserId</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>UserId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.IdleSettings</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_IdleDuration</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_WaitTimeout</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_IdleDuration</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_WaitTimeout</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings</signature>
                        <name>v2Settings</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>IdleDuration</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>WaitTimeout</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.IdleTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.LogonTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.MaintenanceSettings</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings3)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Deadline</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Period</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Deadline</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Period</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IMaintenanceSettings</signature>
                        <name>iMaintSettings</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings3</signature>
                        <name>iSettings</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Deadline</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Period</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.MonthlyDOWTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.DaysOfTheWeek, Microsoft.Win32.TaskScheduler.MonthsOfTheYear, Microsoft.Win32.TaskScheduler.WhichWeek)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.set_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>ReadMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek()</signature>
                        <name>get_DaysOfWeek</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear()</signature>
                        <name>get_MonthsOfYear</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_RandomDelay</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnLastWeekOfMonth</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek()</signature>
                        <name>get_WeeksOfMonth</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.DaysOfTheWeek)</signature>
                        <name>set_DaysOfWeek</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.MonthsOfTheYear)</signature>
                        <name>set_MonthsOfYear</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_RandomDelay</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnLastWeekOfMonth</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.WhichWeek)</signature>
                        <name>set_WeeksOfMonth</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek()</signature>
                        <name>DaysOfWeek</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.Delay</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear()</signature>
                        <name>MonthsOfYear</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>RandomDelay</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RunOnLastWeekOfMonth</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek()</signature>
                        <name>WeeksOfMonth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.MonthlyTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.MonthsOfTheYear)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32(int32[])</signature>
                        <name>IndicesToMask</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(System.Collections.Generic.ICollection`1&lt;!!0&gt;, System.Collections.Generic.ICollection`1&lt;!!0&gt;)</signature>
                        <name>ListsEqual</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32[](int32)</signature>
                        <name>MaskToIndices</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.set_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>ReadMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_DaysOfMonth</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear()</signature>
                        <name>get_MonthsOfYear</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_RandomDelay</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnLastDayOfMonth</name>
                    </method>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>set_DaysOfMonth</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.MonthsOfTheYear)</signature>
                        <name>set_MonthsOfYear</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_RandomDelay</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnLastDayOfMonth</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32[]()</signature>
                        <name>DaysOfMonth</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.Delay</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear()</signature>
                        <name>MonthsOfYear</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>RandomDelay</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RunOnLastDayOfMonth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.MonthlyTrigger/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;V2GetTriggerString&gt;b__23_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthlyTrigger/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;int32,string&gt;</signature>
                        <name>&lt;&gt;9__23_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>AllMonths</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>April</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>August</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>December</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>February</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>January</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>July</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>June</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>March</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>May</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>November</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>October</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>September</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NameValuePair</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.NameValuePair()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.ICloneable.Clone</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair)</signature>
                        <name>System.IEquatable&lt;Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair&gt;.Equals</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AttributedXmlFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.NameValuePair(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AttributedXmlFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AttributedXmlFormat&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair</signature>
                        <name>v2Pair</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>value</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AttributedXmlFormat</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NamedValueCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;GetEnumerator&gt;b__29_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair(int32)</signature>
                        <name>&lt;GetEnumerator&gt;b__29_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection)</signature>
                        <name>Bind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.NamedValueCollection)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>OnCollectionChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;.Contains</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.NameValuePair[], int32)</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;.CopyTo</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;.Remove</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Add</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Contains</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;[], int32)</signature>
                        <name>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.CopyTo</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Remove</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.ContainsKey</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.get_Keys</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>bool(string, string&amp;)</signature>
                        <name>TryGetValue</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.NotifyCollectionChangedEventHandler)</signature>
                        <name>add_CollectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AttributedXmlFormat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>get_Names</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>get_Values</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.NotifyCollectionChangedEventHandler)</signature>
                        <name>remove_CollectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AttributedXmlFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AttributedXmlFormat&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>CollectionChanged</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;</signature>
                        <name>unboundDict</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection</signature>
                        <name>v2Coll</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AttributedXmlFormat</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>string(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>Names</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;.IsReadOnly</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.IsReadOnly</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.Keys</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.ICollection`1&lt;string&gt;()</signature>
                        <name>Values</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>CollectionChanged</name>
                    </event>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NamedValueCollection/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.NameValuePair(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair)</signature>
                        <name>&lt;GetEnumerator&gt;b__29_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>&lt;get_Names&gt;b__20_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>&lt;get_Values&gt;b__22_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;Microsoft.Win32.TaskScheduler.NameValuePair,string&gt;</signature>
                        <name>&lt;&gt;9__20_0</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;Microsoft.Win32.TaskScheduler.NameValuePair,string&gt;</signature>
                        <name>&lt;&gt;9__22_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair,Microsoft.Win32.TaskScheduler.NameValuePair&gt;</signature>
                        <name>&lt;&gt;9__29_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NamedValueCollection/&lt;&gt;c__DisplayClass25_0</name>
                <newname>Microsoft.Win32.TaskScheduler.NamedValueCollection/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>&lt;set_Item&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;set_Item&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NamedValueCollection/&lt;&gt;c__DisplayClass31_0</name>
                <newname>Microsoft.Win32.TaskScheduler.NamedValueCollection/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>&lt;Remove&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NamedValueCollection/&lt;&gt;c__DisplayClass32_0</name>
                <newname>Microsoft.Win32.TaskScheduler.NamedValueCollection/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.NameValuePair)</signature>
                        <name>&lt;TryGetValue&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NamedValueCollection/&lt;System-Collections-Generic-IEnumerable&lt;System-Collections-Generic-KeyValuePair&lt;System-String,System-String&gt;&gt;-GetEnumerator&gt;d__48</name>
                <newname>Microsoft.Win32.TaskScheduler.NamedValueCollection/d</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.NamedValueCollection</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.NameValuePair&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NetworkSettings</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_Id</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings</signature>
                        <name>v2Settings</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Guid()</signature>
                        <name>Id</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NotSupportedPriorToException</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskCompatibility)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LibName</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>LibName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NotV1SupportedException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LibName</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>LibName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.NotV2SupportedException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LibName</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>LibName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption</signature>
                        <name>All</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption</signature>
                        <name>Never</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption</signature>
                        <name>Version1</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.PowerShellActionPlatformOption</signature>
                        <name>Version2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.QuickTriggerType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Boot</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Daily</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Hourly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Idle</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Logon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Monthly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>TaskRegistration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.QuickTriggerType</signature>
                        <name>Weekly</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.RegistrationTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.RepetitionPattern</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Bind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.RepetitionPattern)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.PropertyInfo, object, object&amp;)</signature>
                        <name>ReadXmlConverter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.RepetitionPattern)</signature>
                        <name>Set</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Interval</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StopAtDurationEnd</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Duration</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Interval</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StopAtDurationEnd</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger</signature>
                        <name>pTrigger</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>unboundDuration</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>unboundInterval</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>unboundStopAtDurationEnd</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern</signature>
                        <name>v2Pattern</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Duration</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Interval</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>StopAtDurationEnd</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.RepetitionPatternConverter</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ResourceReferenceValue</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ResourceFilePath</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ResourceIdentifier</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.ResourceReferenceValue)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ResourceFilePath</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ResourceIdentifier</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ResourceFilePath&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ResourceIdentifier&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ResourceFilePath</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ResourceIdentifier</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.RunningTask</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask, Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState()</signature>
                        <name>get_State</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask</signature>
                        <name>v2RunningTask</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState()</signature>
                        <name>State</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.RunningTaskCollection</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.IRunningTaskCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;GetEnumerator&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask(object)</signature>
                        <name>&lt;GetEnumerator&gt;b__9_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.RunningTask(Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask)</signature>
                        <name>&lt;GetEnumerator&gt;b__9_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.RunningTask&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.RunningTask(int32)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>svc</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTaskCollection</signature>
                        <name>v2Coll</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.RunningTask(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.RunningTaskCollection/V1RunningTaskEnumerator</name>
                <newname>Microsoft.Win32.TaskScheduler.RunningTaskCollection/a</newname>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.RunningTask()</signature>
                        <name>get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>svc</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCollection/V1TaskEnumerator</signature>
                        <name>tEnum</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.SessionStateChangeTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>StateChangeIsSet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Delay</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType()</signature>
                        <name>get_StateChange</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_Delay</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType)</signature>
                        <name>set_StateChange</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Delay</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType()</signature>
                        <name>StateChange</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.ShowMessageAction</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection)</signature>
                        <name>CreateV2Action</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Action)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetPowerShellCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_InternalActionType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBody</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBody</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>InternalActionType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBody</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Title</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.StandardTaskEventId</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ActionFailure</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ActionLaunchFailure</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ActionStart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ActionSuccess</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>BootTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatDirectoryMonitorFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatStart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatStartFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatStartLsaFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatStartNetscheduleFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatStartRpcFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatTaskDeleteFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatTaskSetSdFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatTaskStatusUpdateFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatTaskUpdateFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeLsaCleanupFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeNeedNotDetermined</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeNsAccountFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeStartFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeStoreEnumFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeTaskLoadFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CompatUpgradeTaskRegistrationFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ConsoleConnectTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ConsoleDisconnectTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>CreatedTaskProcess</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>EngineQuotaApproaching</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>EventAggregateFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>EventRenderFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>EventTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>FailedTaskRestart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>IdleTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>IgnoredTaskStart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ImmediateTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ImpersonationFailure</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>InstanceQueued</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobFailure</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobNoStartWithoutNetwork</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobRegistered</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobStart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobStartFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobSuccess</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>JobTermination</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>LogonFailure</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>LogonTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>MissedTaskLaunched</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>NewInstanceIgnored</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>NewInstanceQueued</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>NoStartOnBatteries</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>NoStartUserNotLoggedOn</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>NotStartedWithoutIdle</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>RejectedTaskRestart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>RemoteConnectTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>RemoteDisconnectTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>Run</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>RunningInstanceStopped</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceComInitError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceCredStoreInitError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceIdleServiceInitError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceLsaInitError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceRpcInitError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceRunBootJobsFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceStart</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceStartFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceStop</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceTimeChangeInitError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>ScheduleServiceTimeChangeSignaled</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionChannelReady</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionConnected</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionError</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionExit</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionFailedToProcessMessage</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionIdle</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionJobsOrphaned</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionLockTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionManagerConnectFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionMessageSendFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessConnectFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessLaunchFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessMainShutdown</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessMainStarted</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessReceivedStartJob</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessReceivedStopJob</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionProcessStarted</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionSentJob</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionSentJobFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionUnlockTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>SessionWin32ObjectCreated</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>StoppingOffIdle</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>StoppingOnBatteries</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>StoppingOnRequest</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>StoppingOnTimeout</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskDeleted</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskDisabled</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskEventSubscriptionFailed</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskNotRunServiceBusy</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskNotStartedEngineQuotaExceeded</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskNotStartedTaskQueueQuotaExceeded</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskQueueQuotaApproaching</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskRegisteredWithoutCredentials</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskRegisteredWithoutSomeTriggers</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskStartedOnComputerWakeup</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TaskUpdated</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TimeTrigger</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TimeoutWontWork</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>TransactionRollbackFailure</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>VistaBeta2CredstoreUpgradeFailed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TSInteropExt</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.V1Interop.ITask, string)</signature>
                        <name>GetDataItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.V1Interop.ITask, Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags)</signature>
                        <name>HasFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask, string, string)</signature>
                        <name>SetDataItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask, Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags, bool)</signature>
                        <name>SetFlags</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TSNotSupportedException</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskCompatibility)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, Microsoft.Win32.TaskScheduler.TaskCompatibility)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>GetObjectData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LibName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>min</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>myMessage</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>LibName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Task</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask, Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.Task)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask, bool)</signature>
                        <name>CreateTask</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSecurity()</signature>
                        <name>GetAccessControl</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSecurity(System.Security.AccessControl.AccessControlSections)</signature>
                        <name>GetAccessControl</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetOSLibraryMinorVersion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Security.AccessControl.SecurityInfos)</signature>
                        <name>GetSecurityDescriptorSddlForm</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>GetV1Path</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask, bool)</signature>
                        <name>GetV2Definition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask)</signature>
                        <name>GetV2StrippedDefinition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskSecurity)</signature>
                        <name>SetAccessControl</name>
                    </method>
                    <method>
                        <signature>void(string, Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions)</signature>
                        <name>SetSecurityDescriptorSddlForm</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan(string)</signature>
                        <name>StringToTimeSpan</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string(System.TimeSpan)</signature>
                        <name>TimeSpanToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>V1Reactivate</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskDefinition()</signature>
                        <name>get_Definition</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ReadOnly</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState()</signature>
                        <name>get_State</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>get_TaskService</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ReadOnly</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ReadOnly&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>&lt;TaskService&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Security.AccessControl.AccessControlSections</signature>
                        <name>defaultAccessControlSections</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Security.AccessControl.SecurityInfos</signature>
                        <name>defaultSecurityInfosSections</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskDefinition</signature>
                        <name>myTD</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>osLibMinorVer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>v2InvalidDate</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask</signature>
                        <name>v2Task</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskDefinition()</signature>
                        <name>Definition</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Enabled</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ReadOnly</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState()</signature>
                        <name>State</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>TaskService</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Task/DefDoc</name>
                <newname>Microsoft.Win32.TaskScheduler.Task/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string, bool)</signature>
                        <name>Contains</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemoveTag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_Version</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Xml</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Version)</signature>
                        <name>set_Version</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Xml.XmlDocument</signature>
                        <name>doc</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskAccessRule</name>
                <methodlist>
                    <method>
                        <signature>void(System.Security.Principal.IdentityReference, Microsoft.Win32.TaskScheduler.TaskRights, System.Security.AccessControl.AccessControlType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Security.Principal.IdentityReference, int32, bool, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights()</signature>
                        <name>get_TaskRights</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights()</signature>
                        <name>TaskRights</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskActionType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType</signature>
                        <name>ComHandler</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType</signature>
                        <name>Execute</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType</signature>
                        <name>SendEmail</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType</signature>
                        <name>ShowMessage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskAuditRule</name>
                <methodlist>
                    <method>
                        <signature>void(System.Security.Principal.IdentityReference, int32, bool, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights()</signature>
                        <name>get_TaskRights</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights()</signature>
                        <name>TaskRights</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCollection</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskFolder, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTaskCollection, System.Text.RegularExpressions.Regex)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, System.Text.RegularExpressions.Regex)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>System.Text.RegularExpressions.Regex()</signature>
                        <name>get_Filter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>void(System.Text.RegularExpressions.Regex)</signature>
                        <name>set_Filter</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>filter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder</signature>
                        <name>fld</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>svc</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskScheduler</signature>
                        <name>v1TS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTaskCollection</signature>
                        <name>v2Coll</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>System.Text.RegularExpressions.Regex()</signature>
                        <name>Filter</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.Task(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCollection/V1TaskEnumerator</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskCollection/a</newname>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, System.Text.RegularExpressions.Regex)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask()</signature>
                        <name>get_ICurrent</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>curItem</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>filter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>svc</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskScheduler</signature>
                        <name>ts</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.IEnumWorkItems</signature>
                        <name>wienum</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCollection/V2TaskEnumerator</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskCollection/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskFolder, Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTaskCollection, System.Text.RegularExpressions.Regex)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>filter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCollection/V2TaskEnumerator/&lt;&gt;c__DisplayClass1_0</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskCollection/b/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask(object)</signature>
                        <name>&lt;.ctor&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task(Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask)</signature>
                        <name>&lt;.ctor&gt;b__2</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder</signature>
                        <name>folder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTaskCollection</signature>
                        <name>iTaskColl</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCompatibility</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>AT</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>V1</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>V2</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>V2_1</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>V2_2</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>V2_3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCompatibilityEntry</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskCompatibility, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility()</signature>
                        <name>get_CompatibilityLevel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Property</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Reason</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility</signature>
                        <name>&lt;CompatibilityLevel&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Property&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Reason&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility()</signature>
                        <name>CompatibilityLevel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Property</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Reason</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskCreation</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>Create</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>CreateOrUpdate</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>Disable</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>DontAddPrincipalAce</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>IgnoreRegistrationTriggers</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>Update</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCreation</signature>
                        <name>ValidateOnly</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskDefinition</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;get_Principal&gt;b__22_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>object(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>GetV1TaskData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>GetV1TaskDataDictionary</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask, object)</signature>
                        <name>SetV1TaskData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>V1Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.ActionCollection()</signature>
                        <name>get_Actions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipal()</signature>
                        <name>get_Principal</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRegistrationInfo()</signature>
                        <name>get_RegistrationInfo</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSettings()</signature>
                        <name>get_Settings</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TriggerCollection()</signature>
                        <name>get_Triggers</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_XmlText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_XmlText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.ActionCollection</signature>
                        <name>actions</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipal</signature>
                        <name>principal</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRegistrationInfo</signature>
                        <name>regInfo</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSettings</signature>
                        <name>settings</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tns</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TriggerCollection</signature>
                        <name>triggers</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>v1Name</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition</signature>
                        <name>v2Def</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.ActionCollection()</signature>
                        <name>Actions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipal()</signature>
                        <name>Principal</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRegistrationInfo()</signature>
                        <name>RegistrationInfo</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSettings()</signature>
                        <name>Settings</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TriggerCollection()</signature>
                        <name>Triggers</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>XmlText</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEnumGlobalizer</name>
                <methodlist>
                    <method>
                        <signature>string(string, object)</signature>
                        <name>BuildEnumString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.DaysOfTheWeek)</signature>
                        <name>GetCultureEquivalentString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.MonthsOfTheYear)</signature>
                        <name>GetCultureEquivalentString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetString</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEvent</name>
                <methodlist>
                    <method>
                        <signature>void(System.Diagnostics.Eventing.Reader.EventRecord)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, Microsoft.Win32.TaskScheduler.StandardTaskEventId, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.TaskEvent)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.Guid&gt;()</signature>
                        <name>get_ActivityId</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent/EventDataValues()</signature>
                        <name>get_DataValues</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EventId</name>
                    </method>
                    <method>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord()</signature>
                        <name>get_EventRecord</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Level</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OpCode</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_ProcessId</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int64&gt;()</signature>
                        <name>get_RecordId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskCategory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskPath</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_TimeCreated</name>
                    </method>
                    <method>
                        <signature>System.Security.Principal.SecurityIdentifier()</signature>
                        <name>get_UserId</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int8&gt;()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Guid&gt;)</signature>
                        <name>set_ActivityId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EventId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Diagnostics.Eventing.Reader.EventRecord)</signature>
                        <name>set_EventRecord</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Level</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OpCode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_ProcessId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>set_RecordId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TaskCategory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TaskPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_TimeCreated</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Security.Principal.SecurityIdentifier)</signature>
                        <name>set_UserId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int8&gt;)</signature>
                        <name>set_Version</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;System.Guid&gt;</signature>
                        <name>&lt;ActivityId&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent/EventDataValues</signature>
                        <name>&lt;DataValues&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EventId&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord</signature>
                        <name>&lt;EventRecord&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Level&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OpCode&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;ProcessId&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int64&gt;</signature>
                        <name>&lt;RecordId&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TaskCategory&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TaskPath&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;TimeCreated&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Security.Principal.SecurityIdentifier</signature>
                        <name>&lt;UserId&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int8&gt;</signature>
                        <name>&lt;Version&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Nullable`1&lt;System.Guid&gt;()</signature>
                        <name>ActivityId</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent/EventDataValues()</signature>
                        <name>DataValues</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EventId</name>
                    </property>
                    <property>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord()</signature>
                        <name>EventRecord</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Level</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OpCode</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>ProcessId</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int64&gt;()</signature>
                        <name>RecordId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskCategory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskPath</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>TimeCreated</name>
                    </property>
                    <property>
                        <signature>System.Security.Principal.SecurityIdentifier()</signature>
                        <name>UserId</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;unsigned int8&gt;()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEvent/EventDataValues</name>
                <methodlist>
                    <method>
                        <signature>void(System.Diagnostics.Eventing.Reader.EventLogRecord)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogRecord</signature>
                        <name>rec</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskEvent, Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent()</signature>
                        <name>get_TaskEvent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent</signature>
                        <name>&lt;TaskEvent&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TaskPath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>taskService</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent()</signature>
                        <name>TaskEvent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEventEnumerator</name>
                <methodlist>
                    <method>
                        <signature>void(System.Diagnostics.Eventing.Reader.EventLogReader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent()</signature>
                        <name>get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord</signature>
                        <name>curRec</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>log</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEvent()</signature>
                        <name>Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEventLog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, int32[], int32[], System.Nullable`1&lt;System.DateTime&gt;, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, int32[], System.Nullable`1&lt;System.DateTime&gt;, int32[])</signature>
                        <name>BuildQuery</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEventEnumerator(bool)</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void(string, string, bool, string, string, string)</signature>
                        <name>Initialize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.TaskEvent&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Microsoft.Win32.TaskScheduler.TaskEvent&gt;.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnumerateInReverse</name>
                    </method>
                    <method>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogQuery()</signature>
                        <name>get_Query</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnumerateInReverse</name>
                    </method>
                    <method>
                        <signature>void(System.Diagnostics.Eventing.Reader.EventLogQuery)</signature>
                        <name>set_Query</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;EnumerateInReverse&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogQuery</signature>
                        <name>&lt;Query&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsVistaOrLater</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TSEventLogPath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>EnumerateInReverse</name>
                    </property>
                    <property>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogQuery()</signature>
                        <name>Query</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEventLog/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;BuildQuery&gt;b__4_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;BuildQuery&gt;b__4_1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEventLog/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;int32,string&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;int32,string&gt;</signature>
                        <name>&lt;&gt;9__4_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEventWatcher</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BeginInit</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndInit</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>InitTask</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsSuspended</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Win32.TaskScheduler.TaskEventArgs)</signature>
                        <name>OnEventRecorded</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseWatcher</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Restart</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetupWatcher</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartRaisingEvents</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopListening</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopRaisingEvents</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.IO.FileSystemEventArgs)</signature>
                        <name>Watcher_DirectoryChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs)</signature>
                        <name>Watcher_EventRecordWritten</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Win32.TaskScheduler.TaskEventArgs&gt;)</signature>
                        <name>add_EventRecorded</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEventWatcher/EventFilter()</signature>
                        <name>get_Filter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeSubfolders</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsHandleInvalid</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsV1</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.ComponentModel.ISynchronizeInvoke()</signature>
                        <name>get_SynchronizingObject</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetServer</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>get_TaskService</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserAccountDomain</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserPassword</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;Microsoft.Win32.TaskScheduler.TaskEventArgs&gt;)</signature>
                        <name>remove_EventRecorded</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Folder</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeSubfolders</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.ISynchronizeInvoke)</signature>
                        <name>set_SynchronizingObject</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetServer</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>set_TaskService</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserAccountDomain</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserPassword</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEventWatcher/EventFilter</signature>
                        <name>&lt;Filter&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;Microsoft.Win32.TaskScheduler.TaskEventArgs&gt;</signature>
                        <name>EventRecorded</name>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>MaxV1EventLapse</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>disposed</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>enabled</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>folder</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>includeSubfolders</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>initializing</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.StandardTaskEventId</signature>
                        <name>lastId</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>lastIdTime</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>root</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>star</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.ISynchronizeInvoke</signature>
                        <name>synchronizingObject</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>ts</name>
                    </field>
                    <field>
                        <signature>System.IO.FileSystemWatcher</signature>
                        <name>v1Watcher</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogWatcher</signature>
                        <name>watcher</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Enabled</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEventWatcher/EventFilter()</signature>
                        <name>Filter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Folder</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IncludeSubfolders</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsHandleInvalid</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsV1</name>
                    </property>
                    <property>
                        <signature>System.ComponentModel.ISynchronizeInvoke()</signature>
                        <name>SynchronizingObject</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TargetServer</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>TaskService</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserAccountDomain</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserPassword</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;Microsoft.Win32.TaskScheduler.TaskEventArgs&gt;</signature>
                        <name>EventRecorded</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskEventWatcher/EventFilter</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskEventWatcher)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_EventIds</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_EventLevels</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskName</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Wildcard()</signature>
                        <name>get_Wildcard</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>set_EventIds</name>
                    </method>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>set_EventLevels</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TaskName</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Wildcard)</signature>
                        <name>set_Wildcard</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Wildcard</signature>
                        <name>&lt;Wildcard&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filter</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>ids</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>levels</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskEventWatcher</signature>
                        <name>parent</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32[]()</signature>
                        <name>EventIds</name>
                    </property>
                    <property>
                        <signature>int32[]()</signature>
                        <name>EventLevels</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskName</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.Wildcard()</signature>
                        <name>Wildcard</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskFolder</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskService, Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder(string, string, bool)</signature>
                        <name>CreateFolder</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>DeleteFolder</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;(Microsoft.Win32.TaskScheduler.TaskFolder, System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;, bool)</signature>
                        <name>EnumerateFolderTasks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string(System.Security.AccessControl.SecurityInfos)</signature>
                        <name>GetSecurityDescriptorSddlForm</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCollection(System.Text.RegularExpressions.Regex)</signature>
                        <name>GetTasks</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task(string, Microsoft.Win32.TaskScheduler.TaskDefinition)</signature>
                        <name>RegisterTaskDefinition</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task(string, Microsoft.Win32.TaskScheduler.TaskDefinition, Microsoft.Win32.TaskScheduler.TaskCreation, string, string, Microsoft.Win32.TaskScheduler.TaskLogonType, string)</signature>
                        <name>RegisterTaskDefinition</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.TaskFolder)</signature>
                        <name>System.IComparable&lt;Microsoft.Win32.TaskScheduler.TaskFolder&gt;.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolderCollection()</signature>
                        <name>get_SubFolders</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>get_TaskService</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCollection()</signature>
                        <name>get_Tasks</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>&lt;TaskService&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rootString</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskScheduler</signature>
                        <name>v1List</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder</signature>
                        <name>v2Folder</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolderCollection()</signature>
                        <name>SubFolders</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>TaskService</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCollection()</signature>
                        <name>Tasks</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskFolder/&lt;EnumerateFolderTasks&gt;d__25</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskFolder/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Microsoft.Win32.TaskScheduler.Task&gt;.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Microsoft.Win32.TaskScheduler.Task&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Task</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;</signature>
                        <name>&lt;&gt;3__filter</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder</signature>
                        <name>&lt;&gt;3__folder</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__recurse</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.TaskFolder&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;</signature>
                        <name>filter</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder</signature>
                        <name>folder</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>recurse</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskFolderCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskFolder, Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolderCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;GetEnumerator&gt;b__14_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder(object)</signature>
                        <name>&lt;GetEnumerator&gt;b__14_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder(Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder)</signature>
                        <name>&lt;GetEnumerator&gt;b__14_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskFolder)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskFolder)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskFolder[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.TaskFolder&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskFolder)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.TaskFolder&gt;.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder</signature>
                        <name>parent</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder[]</signature>
                        <name>v1FolderList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolderCollection</signature>
                        <name>v2FolderList</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.TaskFolder&gt;.IsReadOnly</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy</signature>
                        <name>IgnoreNew</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy</signature>
                        <name>Parallel</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy</signature>
                        <name>Queue</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy</signature>
                        <name>StopExisting</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskLogonType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>Group</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>InteractiveToken</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>InteractiveTokenOrPassword</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>Password</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>S4U</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType</signature>
                        <name>ServiceAccount</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskPrincipal</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal, System.Func`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Account</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType()</signature>
                        <name>get_LogonType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskLogonType)</signature>
                        <name>set_LogonType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>localSystemAcct</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges</signature>
                        <name>reqPriv</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>v1CachedAcctInfo</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal</signature>
                        <name>v2Principal</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal2</signature>
                        <name>v2Principal2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;string&gt;</signature>
                        <name>xmlFunc</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Account</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>GroupId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Id</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType()</signature>
                        <name>LogonType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeAssignPrimaryTokenPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeAuditPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeBackupPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeChangeNotifyPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeCreateGlobalPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeCreatePagefilePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeCreatePermanentPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeCreateSymbolicLinkPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeCreateTokenPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeDebugPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeEnableDelegationPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeImpersonatePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeIncreaseBasePriorityPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeIncreaseQuotaPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeIncreaseWorkingSetPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeLoadDriverPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeLockMemoryPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeMachineAccountPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeManageVolumePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeProfileSingleProcessPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeRelabelPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeRemoteShutdownPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeRestorePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeSecurityPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeShutdownPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeSyncAgentPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeSystemEnvironmentPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeSystemProfilePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeSystemtimePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeTakeOwnershipPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeTcbPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeTimeZonePrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeTrustedCredManAccessPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeUndockPrivilege</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>SeUnsolicitedInputPrivilege</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege&gt;.Clear</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege&gt;.Remove</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>System.Collections.Generic.IList&lt;Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege&gt;.Insert</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>System.Collections.Generic.IList&lt;Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege&gt;.RemoveAt</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal2</signature>
                        <name>v2Principal2</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadOnly</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivileges/TaskPrincipalPrivilegesEnumerator</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal2)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege)</signature>
                        <name>set_Current</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege</signature>
                        <name>&lt;Current&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cur</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal2</signature>
                        <name>v2Principal2</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskPrincipalPrivilege()</signature>
                        <name>Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType</signature>
                        <name>Default</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType</signature>
                        <name>Unrestricted</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskRegistrationInfo</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRegistrationInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FixCrLf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.PropertyInfo, object, object&amp;)</signature>
                        <name>ProcessVersionXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Author</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Documentation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_URI</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Author</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Documentation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_URI</name>
                    </method>
                    <method>
                        <signature>void(System.Version)</signature>
                        <name>set_Version</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegistrationInfo</signature>
                        <name>v2RegInfo</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Author</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Documentation</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>URI</name>
                    </property>
                    <property>
                        <signature>System.Version()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskRights</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>AppendData</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>ChangePermissions</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>Delete</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>DeleteChild</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>Execute</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>ExecuteFile</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>FullControl</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>Read</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>ReadAttributes</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>ReadData</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>ReadExtendedAttributes</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>ReadPermissions</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>Synchronize</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>TakeOwnership</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>Write</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>WriteAttributes</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>WriteData</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRights</signature>
                        <name>WriteExtendedAttributes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskRunLevel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRunLevel</signature>
                        <name>Highest</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRunLevel</signature>
                        <name>LUA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskSecurity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Task, System.Security.AccessControl.AccessControlSections)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Security.AccessControl.AccessRule(System.Security.Principal.IdentityReference, int32, bool, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)</signature>
                        <name>AccessRuleFactory</name>
                    </method>
                    <method>
                        <signature>System.Security.AccessControl.AuditRule(System.Security.Principal.IdentityReference, int32, bool, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)</signature>
                        <name>AuditRuleFactory</name>
                    </method>
                    <method>
                        <signature>System.Security.AccessControl.SecurityInfos(System.Security.AccessControl.AccessControlSections)</signature>
                        <name>Convert</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Security.AccessControl.AccessControlSections()</signature>
                        <name>GetAccessControlSectionsFromChanges</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Task, System.Security.AccessControl.AccessControlSections)</signature>
                        <name>Persist</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_AccessRightType</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_AccessRuleType</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_AuditRuleType</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Type()</signature>
                        <name>AccessRightType</name>
                    </property>
                    <property>
                        <signature>System.Type()</signature>
                        <name>AccessRuleType</name>
                    </property>
                    <property>
                        <signature>System.Type()</signature>
                        <name>AuditRuleType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Task(string, Microsoft.Win32.TaskScheduler.Trigger, Microsoft.Win32.TaskScheduler.Action, string, string, Microsoft.Win32.TaskScheduler.TaskLogonType, string)</signature>
                        <name>AddTask</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BeginInit</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Connect</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndInit</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskFolder, System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;, System.Collections.Generic.List`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;&amp;, bool)</signature>
                        <name>FindTaskInFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskFolder, System.Text.RegularExpressions.Regex, System.Collections.Generic.List`1&lt;Microsoft.Win32.TaskScheduler.Task&gt;&amp;, bool)</signature>
                        <name>FindTaskInFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder(string)</signature>
                        <name>GetFolder</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>GetLibraryVersionFromLocalOS</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask(Microsoft.Win32.TaskScheduler.V1Interop.ITaskScheduler, string)</signature>
                        <name>GetTask</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask(Microsoft.Win32.TaskScheduler.V2Interop.ITaskService, string)</signature>
                        <name>GetTask</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>GetV2Version</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Instance_ServiceDisconnected</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskDefinition()</signature>
                        <name>NewTask</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetHighestSupportedVersion</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetUnsetProperties</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeTargetServer</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeUserAccountDomain</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeUserName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>System.Runtime.Serialization.ISerializable.GetObjectData</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ServiceConnected</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ServiceDisconnected</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowReadOnlyTasks</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Connected</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_HighestSupportedVersion</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>get_Instance</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_LibraryVersion</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder()</signature>
                        <name>get_RootFolder</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetServer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserAccountDomain</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserPassword</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ServiceConnected</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ServiceDisconnected</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowReadOnlyTasks</name>
                    </method>
                    <method>
                        <signature>void(System.Version)</signature>
                        <name>set_HighestSupportedVersion</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetServer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserAccountDomain</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserPassword</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AllowReadOnlyTasks&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>&lt;LibraryVersion&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>CLSID_Ctask</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>IID_ITask</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>LibraryIsV2</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>PowerShellActionGuid</name>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ServiceConnected</name>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ServiceDisconnected</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>connecting</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>forceV1</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>initializing</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService</signature>
                        <name>instance</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>maxVer</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>maxVerSet</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>osLibVer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>targetServer</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>targetServerSet</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userDomain</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>userDomainSet</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userName</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>userNameSet</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userPassword</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>userPasswordSet</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.WindowsImpersonatedIdentity</signature>
                        <name>v1Impersonation</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskScheduler</signature>
                        <name>v1TaskScheduler</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskService</signature>
                        <name>v2TaskService</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowReadOnlyTasks</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Connected</name>
                    </property>
                    <property>
                        <signature>System.Version()</signature>
                        <name>HighestSupportedVersion</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService()</signature>
                        <name>Instance</name>
                    </property>
                    <property>
                        <signature>System.Version()</signature>
                        <name>LibraryVersion</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskFolder()</signature>
                        <name>RootFolder</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TargetServer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserAccountDomain</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserPassword</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ServiceConnected</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ServiceDisconnected</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService/ComHandlerThread</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Data</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Timeout</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Threading.AutoResetEvent</signature>
                        <name>completed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>objType</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService/ComHandlerThread/TaskHandlerStatus</signature>
                        <name>status</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService/ComHandlerThread/TaskHandlerStatus</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskService/a/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>TaskCompleted</name>
                    </method>
                    <method>
                        <signature>void(int16, string)</signature>
                        <name>UpdateStatus</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;int32&gt;</signature>
                        <name>OnCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskService/ComHandlerUpdate</signature>
                        <name>OnUpdate</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService/ComHandlerUpdate</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(int16, string, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(int16, string)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService/ConnectionData</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskService/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.TaskService/ConnectionData)</signature>
                        <name>Equals</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>ForceV1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TargetServer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserAccountDomain</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserPassword</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService/ConnectionToken</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>token</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskService/VersionConverter</name>
                <newname>Microsoft.Win32.TaskScheduler.TaskService/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskServiceVersion</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Version</signature>
                        <name>V1_1</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>V1_2</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>V1_3</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>V1_4</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>V1_5</name>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>V1_6</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</signature>
                        <name>ConsoleConnect</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</signature>
                        <name>ConsoleDisconnect</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</signature>
                        <name>RemoteConnect</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</signature>
                        <name>RemoteDisconnect</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</signature>
                        <name>SessionLock</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType</signature>
                        <name>SessionUnlock</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions</signature>
                        <name>DontAddPrincipalAce</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSetSecurityOptions</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskSettings</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.PropertyInfo, object, object&amp;)</signature>
                        <name>ConvertXmlProperty</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>int32(System.Diagnostics.ProcessPriorityClass)</signature>
                        <name>GetPriorityAsInt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Diagnostics.ProcessPriorityClass(int32)</signature>
                        <name>GetPriorityFromInt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RestartCount</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_RestartInterval</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RestartCount</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_RestartInterval</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>InfiniteRunTimeV1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.IdleSettings</signature>
                        <name>idleSettings</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MaintenanceSettings</signature>
                        <name>maintenanceSettings</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.NetworkSettings</signature>
                        <name>networkSettings</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings</signature>
                        <name>v2Settings</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings2</signature>
                        <name>v2Settings2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings3</signature>
                        <name>v2Settings3</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Enabled</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RestartCount</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>RestartInterval</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState</signature>
                        <name>Disabled</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState</signature>
                        <name>Queued</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState</signature>
                        <name>Ready</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState</signature>
                        <name>Running</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TaskTriggerType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Boot</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Custom</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Daily</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Event</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Idle</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Logon</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Monthly</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>MonthlyDOW</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Registration</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>SessionStateChange</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Time</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>Weekly</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TimeTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.set_Delay</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_RandomDelay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_RandomDelay</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.Delay</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>RandomDelay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskTriggerType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger, Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(System.DateTime)</signature>
                        <name>AdjustToLocal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>Bind</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>Bind</name>
                    </method>
                    <method>
                        <signature>void(string, object&amp;)</signature>
                        <name>CheckBindValue</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType(Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType)</signature>
                        <name>ConvertFromV1TriggerType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType(Microsoft.Win32.TaskScheduler.TaskTriggerType)</signature>
                        <name>ConvertToV1TriggerType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(Microsoft.Win32.TaskScheduler.TaskTriggerType)</signature>
                        <name>CreateTrigger</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>CreateTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger, Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType)</signature>
                        <name>CreateTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger, Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>CreateTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string(System.TimeSpan)</signature>
                        <name>GetBestTimeSpanString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, !!0)</signature>
                        <name>GetUnboundValueOrDefault</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetV1TriggerData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.IComparable.CompareTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2BaseTriggerString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_EndBoundary</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_ExecutionTimeLimit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.RepetitionPattern()</signature>
                        <name>get_Repetition</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_StartBoundary</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_TriggerType</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_EndBoundary</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_ExecutionTimeLimit</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.RepetitionPattern)</signature>
                        <name>set_Repetition</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_StartBoundary</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>DefaultDateCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>V2BoundaryDateFormat</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>foundTimeSpan2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.RepetitionPattern</signature>
                        <name>repititionPattern</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>timeSpan2Type</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType</signature>
                        <name>ttype</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;</signature>
                        <name>unboundValues</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger</signature>
                        <name>v1Trigger</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTrigger</signature>
                        <name>v1TriggerData</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITrigger</signature>
                        <name>v2Trigger</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Enabled</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>EndBoundary</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>ExecutionTimeLimit</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Id</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.RepetitionPattern()</signature>
                        <name>Repetition</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>StartBoundary</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>TriggerType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger/CronExpression</name>
                <newname>Microsoft.Win32.TaskScheduler.Trigger/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal[]</signature>
                        <name>Fields</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</name>
                <newname>Microsoft.Win32.TaskScheduler.Trigger/a/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</signature>
                        <name>Days</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</signature>
                        <name>DaysOfWeek</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</signature>
                        <name>Hours</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</signature>
                        <name>Minutes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</signature>
                        <name>Months</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal</name>
                <newname>Microsoft.Win32.TaskScheduler.Trigger/a/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType</signature>
                        <name>cft</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>dow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/FieldFlags</signature>
                        <name>flags</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>incr</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>mon</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rangeRegEx</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;Microsoft.Win32.TaskScheduler.Trigger/CronExpression/CronFieldType,Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/MinMax&gt;</signature>
                        <name>validRange</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>vals</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/&lt;&gt;c</name>
                <newname>Microsoft.Win32.TaskScheduler.Trigger/a/b/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;ToString&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;int32,string&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/FieldFlags</name>
                <newname>Microsoft.Win32.TaskScheduler.Trigger/a/b/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/FieldFlags</signature>
                        <name>Every</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/FieldFlags</signature>
                        <name>Increment</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/FieldFlags</signature>
                        <name>List</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/FieldFlags</signature>
                        <name>Range</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Trigger/CronExpression/FieldVal/MinMax</name>
                <newname>Microsoft.Win32.TaskScheduler.Trigger/a/b/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Max</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Min</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TriggerCollection</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;GetEnumerator&gt;b__33_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITrigger(int32)</signature>
                        <name>&lt;GetEnumerator&gt;b__33_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>&lt;GetEnumerator&gt;b__33_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(!!0)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(Microsoft.Win32.TaskScheduler.TaskTriggerType)</signature>
                        <name>AddNew</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Bind</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.Trigger[], int32, int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;)</signature>
                        <name>Find</name>
                    </method>
                    <method>
                        <signature>int32(System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;)</signature>
                        <name>FindIndexOf</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, System.Predicate`1&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;)</signature>
                        <name>FindIndexOf</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;.Add</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>void(System.Array, int32)</signature>
                        <name>System.Collections.ICollection.CopyTo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.ICollection.get_IsSynchronized</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.ICollection.get_SyncRoot</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.Collections.IList.Add</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>System.Collections.IList.Contains</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.Collections.IList.IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Collections.IList.Insert</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>System.Collections.IList.Remove</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.get_IsFixedSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>object(int32)</signature>
                        <name>System.Collections.IList.get_Item</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Collections.IList.set_Item</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>void(int32, Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>v1Task</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITriggerCollection</signature>
                        <name>v2Coll</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition</signature>
                        <name>v2Def</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.Generic.ICollection&lt;Microsoft.Win32.TaskScheduler.Trigger&gt;.IsReadOnly</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.ICollection.IsSynchronized</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.ICollection.SyncRoot</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.IsFixedSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>System.Collections.IList.IsReadOnly</name>
                    </property>
                    <property>
                        <signature>object(int32)</signature>
                        <name>System.Collections.IList.Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TriggerCollection/&lt;&gt;c__DisplayClass26_0</name>
                <newname>Microsoft.Win32.TaskScheduler.TriggerCollection/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>&lt;Contains&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger</signature>
                        <name>item</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TriggerCollection/&lt;&gt;c__DisplayClass41_0</name>
                <newname>Microsoft.Win32.TaskScheduler.TriggerCollection/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>&lt;IndexOf&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger</signature>
                        <name>item</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.TriggerCollection/V1TriggerEnumerator</name>
                <newname>Microsoft.Win32.TaskScheduler.TriggerCollection/a</newname>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.Trigger()</signature>
                        <name>get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>curItem</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask</signature>
                        <name>iTask</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.User</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Security.Principal.WindowsIdentity)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;.ctor&gt;g__GetUser|2_0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.User)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.User(string)</signature>
                        <name>FromSidString</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Security.Principal.WindowsIdentity()</signature>
                        <name>get_Identity</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsServiceAccount</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSystem</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Security.Principal.WindowsIdentity)</signature>
                        <name>set_Identity</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>&lt;Identity&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>cur</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Security.Principal.SecurityIdentifier</signature>
                        <name>sid</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.CTask</name>
                <newname>b0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.CTaskScheduler</name>
                <newname>bz</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString</name>
                <newname>b1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReleaseHandle</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInvalid</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString)</signature>
                        <name>op_Implicit</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.Daily</name>
                <newname>bp</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DaysInterval</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.HResult</name>
                <newname>bk</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_ACCOUNT_DBASE_CORRUPT</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_ACCOUNT_INFORMATION_NOT_SET</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_ACCOUNT_NAME_NOT_FOUND</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_CANNOT_OPEN_TASK</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_INVALID_TASK</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_NO_SECURITY_SERVICES</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_SERVICE_NOT_INSTALLED</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_SERVICE_NOT_LOCALSYSTEM</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_SERVICE_NOT_RUNNING</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_TASK_NOT_READY</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_TASK_NOT_RUNNING</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_TRIGGER_NOT_FOUND</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_UNKNOWN_OBJECT_VERSION</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_UNSUPPORTED_ACCOUNT_OPTION</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_EVENT_TRIGGER</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_DISABLED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_HAS_NOT_RUN</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_NOT_SCHEDULED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_NO_MORE_RUNS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_NO_VALID_TRIGGERS</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_READY</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_RUNNING</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_TERMINATED</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.IEnumWorkItems</name>
                <newname>bw</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.IEnumWorkItems()</signature>
                        <name>Clone</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int32, native int&amp;, unsigned int32&amp;)</signature>
                        <name>Next</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Skip</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.ITask</name>
                <newname>bx</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger(unsigned int16&amp;)</signature>
                        <name>CreateTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>DeleteTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetAccountInformation</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetApplicationName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetComment</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetCreator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags()</signature>
                        <name>GetFlags</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;, unsigned int16&amp;)</signature>
                        <name>GetIdleWait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetMaxRunTime</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetParameters</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetPriority</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus()</signature>
                        <name>GetStatus</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger(unsigned int16)</signature>
                        <name>GetTrigger</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>GetTriggerCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;, native int&amp;)</signature>
                        <name>GetWorkItemData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetWorkingDirectory</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string, native int)</signature>
                        <name>SetAccountInformation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetApplicationName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetCreator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags)</signature>
                        <name>SetFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16)</signature>
                        <name>SetIdleWait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetMaxRunTime</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetParameters</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetPriority</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetTaskFlags</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int8[])</signature>
                        <name>SetWorkItemData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetWorkingDirectory</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.ITaskScheduler</name>
                <newname>bv</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask(string, System.Guid)</signature>
                        <name>Activate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.IEnumWorkItems()</signature>
                        <name>Enum</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetTargetComputer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.ITask(string, System.Guid, System.Guid)</signature>
                        <name>NewWorkItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetTargetComputer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger</name>
                <newname>by</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTrigger()</signature>
                        <name>GetTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.CoTaskMemString()</signature>
                        <name>GetTriggerString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.TaskTrigger&amp;)</signature>
                        <name>SetTrigger</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.MonthlyDOW</name>
                <newname>bs</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek()</signature>
                        <name>get_V2WhichWeek</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.WhichWeek)</signature>
                        <name>set_V2WhichWeek</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>DaysOfTheWeek</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>Months</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>WhichWeek</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.MonthlyDate</name>
                <newname>br</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Days</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.MonthsOfTheYear</signature>
                        <name>Months</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</name>
                <newname>bl</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>DeleteWhenDone</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>Disabled</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>DontStartIfOnBatteries</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>Hidden</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>Interactive</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>KillIfGoingOnBatteries</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>KillOnIdleEnd</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>RestartOnIdleResume</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>RunIfConnectedToInternet</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>RunOnlyIfDocked</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>RunOnlyIfLoggedOn</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>StartOnlyIfIdle</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskFlags</signature>
                        <name>SystemRequired</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</name>
                <newname>bm</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>Disabled</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>NeverRun</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>NoMoreRuns</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>NoTriggerTime</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>NoTriggers</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>NotScheduled</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>Ready</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>Running</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskStatus</signature>
                        <name>Terminated</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.TaskTrigger</name>
                <newname>bu</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_BeginDate</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_EndDate</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_BeginDate</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_EndDate</name>
                        <newname>t</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>BeginDay</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>BeginMonth</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>BeginYear</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TriggerTypeData</signature>
                        <name>Data</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>EndDay</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>EndMonth</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>EndYear</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerFlags</signature>
                        <name>Flags</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MinutesDuration</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MinutesInterval</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>RandomMinutesInterval</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Reserved1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Reserved2</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>StartHour</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>StartMinute</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>TriggerSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>Type</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerFlags</name>
                <newname>bo</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerFlags</signature>
                        <name>Disabled</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerFlags</signature>
                        <name>HasEndDate</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerFlags</signature>
                        <name>KillAtDurationEnd</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</name>
                <newname>bn</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>OnIdle</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>OnLogon</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>OnSystemStart</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>RunDaily</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>RunMonthly</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>RunMonthlyDOW</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>RunOnce</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.TaskTriggerType</signature>
                        <name>RunWeekly</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.TriggerTypeData</name>
                <newname>bt</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.Daily</signature>
                        <name>daily</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.MonthlyDOW</signature>
                        <name>monthlyDOW</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.MonthlyDate</signature>
                        <name>monthlyDate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.V1Interop.Weekly</signature>
                        <name>weekly</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V1Interop.Weekly</name>
                <newname>bq</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek</signature>
                        <name>DaysOfTheWeek</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>WeeksInterval</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IAction</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_Type</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IAction(Microsoft.Win32.TaskScheduler.TaskActionType)</signature>
                        <name>Create</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Remove</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Context</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IAction(int32)</signature>
                        <name>get_Item</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Context</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IBootTrigger</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Delay</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Delay</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IComHandlerAction</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassId</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Data</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_Type</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClassId</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Data</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IDailyTrigger</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>int16()</signature>
                        <name>get_DaysInterval</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RandomDelay</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_DaysInterval</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RandomDelay</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IEmailAction</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>object[]()</signature>
                        <name>get_Attachments</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Bcc</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Body</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Cc</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_From</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection()</signature>
                        <name>get_HeaderFields</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReplyTo</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Server</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subject</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_To</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_Type</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>set_Attachments</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Bcc</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Body</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Cc</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_From</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection)</signature>
                        <name>set_HeaderFields</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReplyTo</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Server</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subject</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_To</name>
                        <newname>t</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IEventTrigger</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Delay</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subscription</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection()</signature>
                        <name>get_ValueQueries</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Delay</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subscription</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection)</signature>
                        <name>set_ValueQueries</name>
                        <newname>t</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IExecAction</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Arguments</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_Type</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingDirectory</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Arguments</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingDirectory</name>
                        <newname>ac</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_IdleDuration</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RestartOnIdle</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StopOnIdleEnd</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WaitTimeout</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IdleDuration</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RestartOnIdle</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StopOnIdleEnd</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WaitTimeout</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IIdleTrigger</name>
                <newname>ap</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ILogonTrigger</name>
                <newname>aq</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Delay</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Delay</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                        <newname>y</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IMaintenanceSettings</name>
                <newname>bf</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Deadline</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Exclusive</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Period</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Deadline</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Exclusive</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Period</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IMonthlyDOWTrigger</name>
                <newname>ar</newname>
                <methodlist>
                    <method>
                        <signature>int16()</signature>
                        <name>get_DaysOfWeek</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_MonthsOfYear</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RandomDelay</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnLastWeekOfMonth</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_WeeksOfMonth</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_DaysOfWeek</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_MonthsOfYear</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RandomDelay</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnLastWeekOfMonth</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_WeeksOfMonth</name>
                        <newname>v</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IMonthlyTrigger</name>
                <newname>as</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DaysOfMonth</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_MonthsOfYear</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RandomDelay</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnLastDayOfMonth</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DaysOfMonth</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_MonthsOfYear</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RandomDelay</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnLastDayOfMonth</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings</name>
                <newname>at</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_DisplayName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupId</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskLogonType()</signature>
                        <name>get_LogonType</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskRunLevel()</signature>
                        <name>get_RunLevel</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DisplayName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupId</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskLogonType)</signature>
                        <name>set_LogonType</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskRunLevel)</signature>
                        <name>set_RunLevel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal2</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddRequiredPrivilege</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>get_Item</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType()</signature>
                        <name>get_ProcessTokenSidType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RequiredPrivilegeCount</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskProcessTokenSidType)</signature>
                        <name>set_ProcessTokenSidType</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask</name>
                <newname>aw</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTaskCollection(int32)</signature>
                        <name>GetInstances</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.NativeMethods/SYSTEMTIME&amp;, Microsoft.Win32.NativeMethods/SYSTEMTIME&amp;, unsigned int32&amp;, native int&amp;)</signature>
                        <name>GetRunTimes</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSecurityDescriptor</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask(object)</signature>
                        <name>Run</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask(object, int32, int32, string)</signature>
                        <name>RunEx</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>SetSecurityDescriptor</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Stop</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition()</signature>
                        <name>get_Definition</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastRunTime</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LastTaskResult</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_NextRunTime</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberOfMissedRuns</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState()</signature>
                        <name>get_State</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Xml</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTaskCollection</name>
                <newname>ax</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask(object)</signature>
                        <name>get_Item</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRegistrationInfo</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Author</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Date</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Documentation</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_SecurityDescriptor</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_URI</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_XmlText</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Author</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Date</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Documentation</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_SecurityDescriptor</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_URI</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_XmlText</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRegistrationTrigger</name>
                <newname>az</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Delay</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Delay</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern</name>
                <newname>a0</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Duration</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Interval</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StopAtDurationEnd</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Duration</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Interval</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StopAtDurationEnd</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask</name>
                <newname>a1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Refresh</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentAction</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_EnginePID</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstanceGuid</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskState()</signature>
                        <name>get_State</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTaskCollection</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTask(object)</signature>
                        <name>get_Item</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ISessionStateChangeTrigger</name>
                <newname>a3</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Delay</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType()</signature>
                        <name>get_StateChange</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Delay</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskSessionStateChangeType)</signature>
                        <name>set_StateChange</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                        <newname>ad</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IShowMessageAction</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBody</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskActionType()</signature>
                        <name>get_Type</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBody</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>ae</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection()</signature>
                        <name>get_Actions</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Data</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal()</signature>
                        <name>get_Principal</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegistrationInfo()</signature>
                        <name>get_RegistrationInfo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings()</signature>
                        <name>get_Settings</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITriggerCollection()</signature>
                        <name>get_Triggers</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_XmlText</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IActionCollection)</signature>
                        <name>set_Actions</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Data</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IPrincipal)</signature>
                        <name>set_Principal</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRegistrationInfo)</signature>
                        <name>set_RegistrationInfo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings)</signature>
                        <name>set_Settings</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITriggerCollection)</signature>
                        <name>set_Triggers</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_XmlText</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder(string, object)</signature>
                        <name>CreateFolder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>DeleteFolder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>DeleteTask</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder(string)</signature>
                        <name>GetFolder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolderCollection(int32)</signature>
                        <name>GetFolders</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSecurityDescriptor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask(string)</signature>
                        <name>GetTask</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTaskCollection(int32)</signature>
                        <name>GetTasks</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask(string, string, int32, object, object, Microsoft.Win32.TaskScheduler.TaskLogonType, object)</signature>
                        <name>RegisterTask</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRegisteredTask(string, Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition, int32, object, object, Microsoft.Win32.TaskScheduler.TaskLogonType, object)</signature>
                        <name>RegisterTaskDefinition</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>SetSecurityDescriptor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolderCollection</name>
                <newname>a7</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder(object)</signature>
                        <name>get_Item</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValueCollection</name>
                <newname>a8</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair(string, string)</signature>
                        <name>Create</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Remove</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair(int32)</signature>
                        <name>get_Item</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskNamedValuePair</name>
                <newname>a9</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskService</name>
                <newname>ba</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object, object)</signature>
                        <name>Connect</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder(string)</signature>
                        <name>GetFolder</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRunningTaskCollection(int32)</signature>
                        <name>GetRunningTasks</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITaskDefinition(unsigned int32)</signature>
                        <name>NewTask</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Connected</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectedDomain</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectedUser</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_HighestVersion</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetServer</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings</name>
                <newname>bc</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowDemandStart</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowHardTerminate</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility()</signature>
                        <name>get_Compatibility</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeleteExpiredTaskAfter</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisallowStartIfOnBatteries</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Hidden</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings()</signature>
                        <name>get_IdleSettings</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy()</signature>
                        <name>get_MultipleInstances</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings()</signature>
                        <name>get_NetworkSettings</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Priority</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RestartCount</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RestartInterval</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnlyIfIdle</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnlyIfNetworkAvailable</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StartWhenAvailable</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StopIfGoingOnBatteries</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WakeToRun</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_XmlText</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowDemandStart</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowHardTerminate</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskCompatibility)</signature>
                        <name>set_Compatibility</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeleteExpiredTaskAfter</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisallowStartIfOnBatteries</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Hidden</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings)</signature>
                        <name>set_IdleSettings</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskInstancesPolicy)</signature>
                        <name>set_MultipleInstances</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings)</signature>
                        <name>set_NetworkSettings</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Priority</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RestartCount</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RestartInterval</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnlyIfIdle</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnlyIfNetworkAvailable</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StartWhenAvailable</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StopIfGoingOnBatteries</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WakeToRun</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_XmlText</name>
                        <newname>af</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings2</name>
                <newname>bd</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisallowStartOnRemoteAppSession</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseUnifiedSchedulingEngine</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisallowStartOnRemoteAppSession</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseUnifiedSchedulingEngine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITaskSettings3</name>
                <newname>be</newname>
                <methodlist>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IMaintenanceSettings()</signature>
                        <name>CreateMaintenanceSettings</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowDemandStart</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowHardTerminate</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskCompatibility()</signature>
                        <name>get_Compatibility</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeleteExpiredTaskAfter</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisallowStartIfOnBatteries</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisallowStartOnRemoteAppSession</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Hidden</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings()</signature>
                        <name>get_IdleSettings</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IMaintenanceSettings()</signature>
                        <name>get_MaintenanceSettings</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskInstancesPolicy()</signature>
                        <name>get_MultipleInstances</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings()</signature>
                        <name>get_NetworkSettings</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Priority</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RestartCount</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RestartInterval</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnlyIfIdle</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RunOnlyIfNetworkAvailable</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StartWhenAvailable</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StopIfGoingOnBatteries</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseUnifiedSchedulingEngine</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Volatile</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WakeToRun</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_XmlText</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowDemandStart</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowHardTerminate</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskCompatibility)</signature>
                        <name>set_Compatibility</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeleteExpiredTaskAfter</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisallowStartIfOnBatteries</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisallowStartOnRemoteAppSession</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Hidden</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IIdleSettings)</signature>
                        <name>set_IdleSettings</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IMaintenanceSettings)</signature>
                        <name>set_MaintenanceSettings</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskInstancesPolicy)</signature>
                        <name>set_MultipleInstances</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.INetworkSettings)</signature>
                        <name>set_NetworkSettings</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Priority</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RestartCount</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RestartInterval</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnlyIfIdle</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RunOnlyIfNetworkAvailable</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StartWhenAvailable</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StopIfGoingOnBatteries</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseUnifiedSchedulingEngine</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Volatile</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WakeToRun</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_XmlText</name>
                        <newname>af</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITimeTrigger</name>
                <newname>bg</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RandomDelay</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RandomDelay</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITrigger</name>
                <newname>bh</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.ITriggerCollection</name>
                <newname>bi</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITrigger(Microsoft.Win32.TaskScheduler.TaskTriggerType)</signature>
                        <name>Create</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Remove</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.ITrigger(int32)</signature>
                        <name>get_Item</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.IWeeklyTrigger</name>
                <newname>bj</newname>
                <methodlist>
                    <method>
                        <signature>int16()</signature>
                        <name>get_DaysOfWeek</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndBoundary</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RandomDelay</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern()</signature>
                        <name>get_Repetition</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartBoundary</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.TaskTriggerType()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_WeeksInterval</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_DaysOfWeek</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndBoundary</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RandomDelay</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.IRepetitionPattern)</signature>
                        <name>set_Repetition</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartBoundary</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_WeeksInterval</name>
                        <newname>z</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.V2Interop.TaskSchedulerClass</name>
                <newname>bb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.WeeklyTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.DaysOfTheWeek, int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.V2Interop.ITrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>CopyProperties</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.TaskScheduler.Trigger)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.get_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.set_Delay</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>ReadMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.GetSchema</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.ReadXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>System.Xml.Serialization.IXmlSerializable.WriteXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>V2GetTriggerString</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter)</signature>
                        <name>WriteMyXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek()</signature>
                        <name>get_DaysOfWeek</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_RandomDelay</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_WeeksInterval</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.DaysOfTheWeek)</signature>
                        <name>set_DaysOfWeek</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_RandomDelay</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_WeeksInterval</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.TaskScheduler.DaysOfTheWeek()</signature>
                        <name>DaysOfWeek</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Microsoft.Win32.TaskScheduler.ITriggerDelay.Delay</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>RandomDelay</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>WeeksInterval</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.WhichWeek</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek</signature>
                        <name>AllWeeks</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek</signature>
                        <name>FirstWeek</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek</signature>
                        <name>FourthWeek</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek</signature>
                        <name>LastWeek</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek</signature>
                        <name>SecondWeek</name>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.TaskScheduler.WhichWeek</signature>
                        <name>ThirdWeek</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.Wildcard</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Text.RegularExpressions.RegexOptions)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>WildcardToRegex</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.XmlSerializationHelper</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>bool(System.Reflection.PropertyInfo, System.Type, string, bool, object&amp;)</signature>
                        <name>GetAttributeValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type, System.Type, string, bool, object&amp;)</signature>
                        <name>GetAttributeValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.Reflection.PropertyInfo)</signature>
                        <name>GetDefaultValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetElementName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(System.Reflection.PropertyInfo)</signature>
                        <name>GetPropertyAttributeName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(System.Reflection.PropertyInfo)</signature>
                        <name>GetPropertyElementName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object, string, object&amp;)</signature>
                        <name>GetPropertyValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetTopLevelNamespace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object, System.Type)</signature>
                        <name>GetXmlValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>HasMembers</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsStandardType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>ReadObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>ReadObjectFromXmlText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>ReadObjectProperties</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler, bool, string)</signature>
                        <name>WriteObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter, System.Reflection.PropertyInfo, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>WriteObjectAttribute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>WriteObjectAttributes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlWriter, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>WriteObjectProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>WriteObjectToXmlText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlWriter, System.Reflection.PropertyInfo, object, Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler)</signature>
                        <name>WriteProperty</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.TaskScheduler.XmlSerializationHelper/PropertyConversionHandler</name>
                <newname>af/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.Reflection.PropertyInfo, object, object&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>bool(object&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.PropertyInfo, object, object&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.Win32.WindowsImpersonatedIdentity</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AuthenticationType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAuthenticated</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>LOGON32_LOGON_INTERACTIVE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LOGON32_PROVIDER_DEFAULT</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LOGON32_PROVIDER_WINNT50</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LOGON_TYPE_NEW_CREDENTIALS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>identity</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Security.Principal.WindowsImpersonationContext</signature>
                        <name>impersonationContext</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.NativeMethods/SafeTokenHandle</signature>
                        <name>token</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.EnumUtil</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>void(bool)</signature>
                        <name>CheckIsEnum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0, !!0)</signature>
                        <name>IsFlagSet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool()</signature>
                        <name>IsFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0)</signature>
                        <name>IsValidFlagValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(!!0, !!0, bool)</signature>
                        <name>SetFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0&amp;, !!0, bool)</signature>
                        <name>SetFlags</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Reflection.ReflectionHelper</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(object, string, !!0)</signature>
                        <name>GetProperty</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Type, object[], string, object[])</signature>
                        <name>InvokeMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(object, string, System.Type[], object[])</signature>
                        <name>InvokeMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(object, string, object[])</signature>
                        <name>InvokeMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type(string, string)</signature>
                        <name>LoadType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(object, string, !!0)</signature>
                        <name>SetProperty</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.Assembly, string, System.Type&amp;)</signature>
                        <name>TryGetType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string, System.Type&amp;)</signature>
                        <name>TryGetType</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>System.Reflection.ReflectionHelper/&lt;&gt;c__4`1</name>
                <newname>g/&lt;&gt;c__4`1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type(object)</signature>
                        <name>&lt;InvokeMethod&gt;b__4_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Reflection.ReflectionHelper/&lt;&gt;c__4`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Converter`2&lt;object,System.Type&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TIn</name>
                    <newname>b</newname>
                </genericparameter>
                <name>System.Runtime.InteropServices.ComEnumerator`2</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Func`1&lt;int32&gt;, System.Func`2&lt;int32,!1&gt;, System.Func`2&lt;!1,!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Func`1&lt;int32&gt;, System.Func`2&lt;object,!1&gt;, System.Func`2&lt;!1,!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;!1,!0&gt;</signature>
                        <name>converter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!1&gt;</signature>
                        <name>iEnum</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TIn</name>
                    <newname>b</newname>
                </genericparameter>
                <name>System.Runtime.InteropServices.ComEnumerator`2/&lt;&gt;c__DisplayClass2_0</name>
                <newname>h/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!1&gt;()</signature>
                        <name>&lt;.ctor&gt;g__Enumerate|0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;int32&gt;</signature>
                        <name>getCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;int32,!1&gt;</signature>
                        <name>indexer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TIn</name>
                    <newname>b</newname>
                </genericparameter>
                <name>System.Runtime.InteropServices.ComEnumerator`2/&lt;&gt;c__DisplayClass2_0/&lt;&lt;-ctor&gt;g__Enumerate|0&gt;d</name>
                <newname>h/a/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TIn&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComEnumerator`2/&lt;&gt;c__DisplayClass2_0&lt;!0,!1&gt;</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;x&gt;5__2</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TIn</name>
                    <newname>b</newname>
                </genericparameter>
                <name>System.Runtime.InteropServices.ComEnumerator`2/&lt;&gt;c__DisplayClass3_0</name>
                <newname>h/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!1&gt;()</signature>
                        <name>&lt;.ctor&gt;g__Enumerate|0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;int32&gt;</signature>
                        <name>getCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;object,!1&gt;</signature>
                        <name>indexer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TIn</name>
                    <newname>b</newname>
                </genericparameter>
                <name>System.Runtime.InteropServices.ComEnumerator`2/&lt;&gt;c__DisplayClass3_0/&lt;&lt;-ctor&gt;g__Enumerate|0&gt;d</name>
                <newname>h/b/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TIn&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComEnumerator`2/&lt;&gt;c__DisplayClass3_0&lt;!0,!1&gt;</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;x&gt;5__2</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Security.AccessControl.AccessControlExtension</name>
                <methodlist>
                    <method>
                        <signature>void(System.Security.AccessControl.RawAcl)</signature>
                        <name>Canonicalize</name>
                    </method>
                    <method>
                        <signature>void(System.Security.AccessControl.ObjectSecurity)</signature>
                        <name>CanonicalizeAccessRules</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.Security.AccessControl.GenericSecurityDescriptor)</signature>
                        <name>GetBinaryForm</name>
                    </method>
                    <method>
                        <signature>unsigned int8(System.Security.AccessControl.GenericAce)</signature>
                        <name>GetComparisonValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Security.AccessControl.AccessControlExtension/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Security.AccessControl.GenericAce, System.Security.AccessControl.GenericAce)</signature>
                        <name>&lt;Canonicalize&gt;b__0_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.AccessControl.AccessControlExtension/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;System.Security.AccessControl.GenericAce&gt;</signature>
                        <name>&lt;&gt;9__0_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Security.AccessControl.AccessControlExtension/&lt;&gt;c__DisplayClass0_0</name>
                <newname>System.Security.AccessControl.AccessControlExtension/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Security.AccessControl.GenericAce)</signature>
                        <name>&lt;Canonicalize&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>aceIndex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Security.AccessControl.RawAcl</signature>
                        <name>acl</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ApplicationInfo</name>
                <newname>b2</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.Task, winPEAS.ApplicationInfo/&lt;&gt;c__DisplayClass9_0&amp;)</signature>
                        <name>&lt;GetScheduledAppsNoMicrosoft&gt;g__ActOnTask|9_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.TaskScheduler.TaskFolder, winPEAS.ApplicationInfo/&lt;&gt;c__DisplayClass9_0&amp;)</signature>
                        <name>&lt;GetScheduledAppsNoMicrosoft&gt;g__EnumFolderTasks|9_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetActiveWindowTitle</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetAutoRuns</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetAutoRunsFolder</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetAutoRunsWMIC</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Diagnostics.FileVersionInfo&gt;()</signature>
                        <name>GetDeviceDriversNoMicrosoft</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>GetForegroundWindow</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetInstalledAppsPerms</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>GetInstalledAppsPermsPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetRegistryAutoRuns</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetScheduledAppsNoMicrosoft</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(native int, System.Text.StringBuilder, int32)</signature>
                        <name>GetWindowText</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ApplicationInfo/&lt;&gt;c</name>
                <newname>b2/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>&lt;GetInstalledAppsPerms&gt;b__4_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>&lt;GetInstalledAppsPerms&gt;b__4_1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>winPEAS.ApplicationInfo/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>&lt;&gt;9__4_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ApplicationInfo/&lt;&gt;c__DisplayClass9_0</name>
                <newname>b2/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>results</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ApplicationInfo/EnumAPI</name>
                <newname>b2/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(native unsigned int[], unsigned int32, unsigned int32&amp;)</signature>
                        <name>EnumDeviceDrivers</name>
                    </method>
                    <method>
                        <signature>int32(native unsigned int, System.Text.StringBuilder, unsigned int32)</signature>
                        <name>GetDeviceDriverBaseName</name>
                    </method>
                    <method>
                        <signature>int32(native unsigned int, System.Text.StringBuilder, unsigned int32)</signature>
                        <name>GetDeviceDriverFileName</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Beaprint</name>
                <newname>b3</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>AnsiPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>BadPrint</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,object&gt;, bool)</signature>
                        <name>DictPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;, bool, bool)</signature>
                        <name>DictPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, bool)</signature>
                        <name>DictPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;, bool, bool)</signature>
                        <name>DictPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;, bool)</signature>
                        <name>DictPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>GoodPrint</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>GrayPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>GreatPrint</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>InfoPrint</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>LinkPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>ListPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>ListPrint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>MainPrint</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotFoundPrint</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintBanner</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInit</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintLegend</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintLineSeparator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintUsage</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>Regexansi</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>deleteColors</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BLUE</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CYAN</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DGRAY</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GRAY</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GREEN</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LBLUE</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LCYAN</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LGREEN</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LRED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LYELLOW</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MAGENTA</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NOCOLOR</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>YELLOW</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_color_bad</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_color_good</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_color_gray</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_color_yellow</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_current_user</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_users_active</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ansi_users_disabled</name>
                        <newname>t</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_0836</name>
                <newname>cd</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_0841</name>
                <newname>ce</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1064</name>
                <newname>cf</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1130</name>
                <newname>cg</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1253</name>
                <newname>ch</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1315</name>
                <newname>ci</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1385</name>
                <newname>cj</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1388</name>
                <newname>ck</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.CVE_2019_1405</name>
                <newname>cl</newname>
                <methodlist>
                    <method>
                        <signature>void(winPEAS.VulnerabilityCollection, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.InterestingFiles</name>
                <newname>b4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>DecryptGPP</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>ExtractUnattenededPwd</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetCachedGPPPassword</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetConsoleHostHistory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetMcAfeeSitelistFiles</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetRecycleBin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetSAMBackups</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetUnattendedInstallFiles</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>ListUsersDocs</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo</name>
                <newname>b5</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CloseHandle</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>DumpVault</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool(native int, int32, native int&amp;)</signature>
                        <name>DuplicateToken</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetChromeDbs</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;()</signature>
                        <name>GetChromeHistBook</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetCredFiles</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetCurrentIETabs</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetFirefoxDbs</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetFirefoxHistory</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;()</signature>
                        <name>GetIEHistFav</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetKerberosTGTData</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetPuttySessions</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetRDCManFiles</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetRecentFiles</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;()</signature>
                        <name>GetRecentRunCommands</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetSavedRDPConnections</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetSystem</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object(native int)</signature>
                        <name>GetVaultElementValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>ImpersonateLoggedOnUser</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListCloudCreds</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListKerberosTGTDataAllUsers</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListKerberosTGTDataCurrentUser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListKerberosTickets</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListKerberosTicketsAllUsers</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListKerberosTicketsCurrentUser</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListMasterKeys</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>ListPuttySSHHostKeys</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int32(native int, int32, winPEAS.KnownFileCredsInfo/KERB_QUERY_TKT_CACHE_REQUEST&amp;, int32, native int&amp;, int32&amp;, int32&amp;)</signature>
                        <name>LsaCallAuthenticationPackage</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, winPEAS.KnownFileCredsInfo/KERB_RETRIEVE_TKT_REQUEST&amp;, int32, native int&amp;, int32&amp;, int32&amp;)</signature>
                        <name>LsaCallAuthenticationPackage_KERB_RETRIEVE_TKT</name>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>LsaConnectUntrusted</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>LsaDeregisterLogonProcess</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int64&amp;, native int&amp;)</signature>
                        <name>LsaEnumerateLogonSessions</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int)</signature>
                        <name>LsaFreeReturnBuffer</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, native int&amp;)</signature>
                        <name>LsaGetLogonSessionData</name>
                    </method>
                    <method>
                        <signature>int32(native int, winPEAS.KnownFileCredsInfo/LSA_STRING_IN&amp;, int32&amp;)</signature>
                        <name>LsaLookupAuthenticationPackage</name>
                    </method>
                    <method>
                        <signature>int32(winPEAS.KnownFileCredsInfo/LSA_STRING_IN, native int&amp;, unsigned int64&amp;)</signature>
                        <name>LsaRegisterLogonProcess</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>LsaRegisterLogonProcessHelper</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, native int&amp;)</signature>
                        <name>OpenProcessToken</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>ParseChromeBookmarks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>ParseChromeHistory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>ParseFirefoxHistory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>RevertToSelf</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</name>
                <newname>b5/p</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_AS_KERB_CRED</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_CACHE_TICKET</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_DEFAULT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_DONT_USE_CACHE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_MAX_LIFETIME</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_USE_CACHE_ONLY</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_USE_CREDHANDLE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>KERB_RETRIEVE_TICKET_WITH_SEC_CRED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_CRYPTO_KEY</name>
                <newname>b5/k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>KeyType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Length</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Value</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</name>
                <newname>b5/KERB_ENCRYPTION_TYPE</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>aes128_cts_hmac_sha1_96</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>aes128_cts_hmac_sha256_128</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>aes256_cts_hmac_sha1_96</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>aes256_cts_hmac_sha384_192</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>camellia128_cts_cmac</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>camellia256_cts_cmac</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des3_cbc_md5</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des3_cbc_sha1</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des3_cbc_sha1_kd</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des_cbc_crc</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des_cbc_md4</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des_cbc_md5</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>des_ede3_cbc_Env_OID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>dsaWithSHA1_CmsOID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>md5WithRSAEncryption_CmsOID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>rc2CBC_EnvOID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>rc4_hmac</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>rc4_hmac_exp</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>reserved0</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>reserved1</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>reserved2</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>rsaES_OAEP_ENV_OID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>rsaEncryption_EnvOID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>sha1WithRSAEncryption_CmsOID</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_ENCRYPTION_TYPE</signature>
                        <name>subkey_keymaterial</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_EXTERNAL_NAME</name>
                <newname>b5/o</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>NameCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>NameType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>Names</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_EXTERNAL_TICKET</name>
                <newname>b5/l</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>AltTargetDomainName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>ClientName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>DomainName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>EncodedTicket</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EncodedTicketSize</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>EndTime</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Flags</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>KeyExpirationTime</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>RenewUntil</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>ServiceName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CRYPTO_KEY</signature>
                        <name>SessionKey</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>StartTime</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>TargetDomainName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>TargetName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TicketFlags</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>TimeSkew</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</name>
                <newname>b5/g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbAddBindingCacheEntryExMessage</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbAddBindingCacheEntryMessage</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbAddExtraCredentialsExMessage</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbAddExtraCredentialsMessage</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbChangeMachinePasswordMessage</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbChangePasswordMessage</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbCleanupMachinePkinitCredsMessage</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbDebugRequestMessage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbDecryptDataMessage</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbPurgeBindingCacheMessage</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbPurgeKdcProxyCacheMessage</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbPurgeTicketCacheExMessage</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbPurgeTicketCacheMessage</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryBindingCacheMessage</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryDomainExtendedPoliciesMessage</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryKdcProxyCacheMessage</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryS4U2ProxyCacheMessage</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQuerySupplementalCredentialsMessage</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryTicketCacheEx2Message</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryTicketCacheEx3Message</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryTicketCacheExMessage</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbQueryTicketCacheMessage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbRefreshSmartcardCredentialsMessage</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbRetrieveEncodedTicketMessage</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbRetrieveTicketMessage</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbSetPasswordExMessage</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbSetPasswordMessage</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbSubmitTicketMessage</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbTransferCredentialsMessage</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbUpdateAddressesMessage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbVerifyCredentialsMessage</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>KerbVerifyPacMessage</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_QUERY_TKT_CACHE_REQUEST</name>
                <newname>b5/f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LUID</signature>
                        <name>LogonId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>MessageType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_QUERY_TKT_CACHE_RESPONSE</name>
                <newname>b5/h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CountOfTickets</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>MessageType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Tickets</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_RETRIEVE_TKT_REQUEST</name>
                <newname>b5/m</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_CACHE_OPTIONS</signature>
                        <name>CacheOptions</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_HANDLE</signature>
                        <name>CredentialsHandle</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>EncryptionType</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LUID</signature>
                        <name>LogonId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_PROTOCOL_MESSAGE_TYPE</signature>
                        <name>MessageType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_IN</signature>
                        <name>TargetName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>TicketFlags</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_RETRIEVE_TKT_RESPONSE</name>
                <newname>b5/j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_EXTERNAL_TICKET</signature>
                        <name>Ticket</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_TICKET_CACHE_INFO</name>
                <newname>b5/i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>EncryptionType</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>EndTime</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>RealmName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>RenewTime</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>ServerName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>StartTime</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TicketFlags</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</name>
                <newname>b5/KERB_TICKET_FLAGS</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>enc_pa_rep</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>forwardable</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>forwarded</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>hw_authent</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>initial</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>invalid</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>may_postdate</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>name_canonicalize</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>ok_as_delegate</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>postdated</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>pre_authent</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>proxiable</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>proxy</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>renewable</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>reserved</name>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/KERB_TICKET_FLAGS</signature>
                        <name>reserved1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/LSA_STRING_IN</name>
                <newname>b5/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Buffer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</name>
                <newname>b5/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>Buffer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/LUID</name>
                <newname>b5/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>HighPart</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LowPart</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/SECURITY_HANDLE</name>
                <newname>b5/n</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>HighPart</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>LowPart</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_SESSION_DATA</name>
                <newname>b5/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>AuthenticationPackage</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>DnsDomainName</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>LoginDomain</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LUID</signature>
                        <name>LoginID</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>LoginTime</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>LogonServer</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LogonType</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>PSiD</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Session</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>Upn</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/LSA_STRING_OUT</signature>
                        <name>Username</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</name>
                <newname>b5/q</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>Batch</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>CachedInteractive</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>CachedRemoteInteractive</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>CachedUnlock</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>Interactive</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>Network</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>NetworkCleartext</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>NewCredentials</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>Proxy</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>RemoteInteractive</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>Service</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/SECURITY_LOGON_TYPE</signature>
                        <name>Unlock</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/VaultCli</name>
                <newname>b5/a</newname>
                <methodlist>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, native int&amp;)</signature>
                        <name>VaultEnumerateItems</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, native int&amp;)</signature>
                        <name>VaultEnumerateVaults</name>
                    </method>
                    <method>
                        <signature>int32(native int, System.Guid&amp;, native int, native int, native int, int32, native int&amp;)</signature>
                        <name>VaultGetItem_WIN7</name>
                    </method>
                    <method>
                        <signature>int32(native int, System.Guid&amp;, native int, native int, native int, native int, int32, native int&amp;)</signature>
                        <name>VaultGetItem_WIN8</name>
                    </method>
                    <method>
                        <signature>int32(System.Guid&amp;, unsigned int32, native int&amp;)</signature>
                        <name>VaultOpenVault</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</name>
                <newname>b5/a/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Attribute</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Boolean</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>ByteArray</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Double</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Guid</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Int</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Last</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>ProtectedArray</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Short</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Sid</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>String</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>TimeStamp</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Undefined</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>UnsignedInt</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>UnsignedShort</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ITEM_ELEMENT</name>
                <newname>b5/a/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>SchemaElementId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Type</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ITEM_WIN7</name>
                <newname>b5/a/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>LastModified</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SchemaId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFlags</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwPropertiesCount</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pAuthenticatorElement</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pIdentityElement</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pPropertyElements</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pResourceElement</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pszCredentialFriendlyName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_ITEM_WIN8</name>
                <newname>b5/a/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>LastModified</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SchemaId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFlags</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwPropertiesCount</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pAuthenticatorElement</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pIdentityElement</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pPackageSid</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pPropertyElements</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pResourceElement</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pszCredentialFriendlyName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</name>
                <newname>b5/a/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>AppEnd</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>AppStart</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Authenticator</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Identity</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Illegal</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>PackageSid</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Resource</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.KnownFileCredsInfo/VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Tag</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.MyUtils</name>
                <newname>b6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckIfDotNet</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckQuoteAndSpace</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>ContainsAnyRegex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ExecCMD</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>FindFiles</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>FindFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetCLSIDBinPath</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetExecutableFromPath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFolderFromString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(System.Security.AccessControl.FileSecurity, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetMyPermissionsF</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(Microsoft.Win32.RegistryKey, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetMyPermissionsR</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetPermissionsFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetPermissionsFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string, int32)</signature>
                        <name>GetRecursivePrivs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string[](string, string)</signature>
                        <name>GetRegSubkeys</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>GetRegValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string, string, string)</signature>
                        <name>GetRegValueBytes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;(string, string)</signature>
                        <name>GetRegValues</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>IsDomainJoined</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>IsDomainJoinedWmi</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsHighIntegrity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>ListFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32, bool, bool)</signature>
                        <name>PermInt2Str</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ReconstructExecPath</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.MyUtils/&lt;&gt;c</name>
                <newname>b6/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;FindFiles&gt;b__20_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetRecursivePrivs&gt;b__13_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;GetRecursivePrivs&gt;b__13_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetRegValues&gt;b__4_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetRegValues&gt;b__4_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetRegValues&gt;b__4_2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;ListFolder&gt;b__21_0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>winPEAS.MyUtils/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__13_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__13_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__20_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__21_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__4_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__4_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.MyUtils/Win32</name>
                <newname>b6/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>NetApiBufferFree</name>
                    </method>
                    <method>
                        <signature>int32(string, native int&amp;, winPEAS.MyUtils/Win32/NetJoinStatus&amp;)</signature>
                        <name>NetGetJoinInformation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ErrorSuccess</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.MyUtils/Win32/NetJoinStatus</name>
                <newname>b6/a/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.MyUtils/Win32/NetJoinStatus</signature>
                        <name>NetSetupDomainName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.MyUtils/Win32/NetJoinStatus</signature>
                        <name>NetSetupUnjoined</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.MyUtils/Win32/NetJoinStatus</signature>
                        <name>NetSetupUnknownStatus</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.MyUtils/Win32/NetJoinStatus</signature>
                        <name>NetSetupWorkgroupName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.NetworkInfo</name>
                <newname>b7</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>FreeMibTable</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetDNSCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetFirewallBooleans</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetFirewallProfiles</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetFirewallRules</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(native int, int32&amp;, bool)</signature>
                        <name>GetIpNetTable</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetNetCardInfo</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;string&gt;&gt;()</signature>
                        <name>GetNetConnections</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>GetNetworkShares</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_INSUFFICIENT_BUFFER</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.NetworkInfo/&lt;&gt;c</name>
                <newname>b7/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(winPEAS.NetworkInfo/MIB_IPNETROW)</signature>
                        <name>&lt;GetNetCardInfo&gt;b__5_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>winPEAS.NetworkInfo/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;winPEAS.NetworkInfo/MIB_IPNETROW,int32&gt;</signature>
                        <name>&lt;&gt;9__5_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.NetworkInfo/ArpEntryType</name>
                <newname>b7/ArpEntryType</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.NetworkInfo/ArpEntryType</signature>
                        <name>Dynamic</name>
                    </field>
                    <field>
                        <signature>winPEAS.NetworkInfo/ArpEntryType</signature>
                        <name>Invalid</name>
                    </field>
                    <field>
                        <signature>winPEAS.NetworkInfo/ArpEntryType</signature>
                        <name>Other</name>
                    </field>
                    <field>
                        <signature>winPEAS.NetworkInfo/ArpEntryType</signature>
                        <name>Static</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.NetworkInfo/FirewallProfiles</name>
                <newname>b7/FirewallProfiles</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.NetworkInfo/FirewallProfiles</signature>
                        <name>ALL</name>
                    </field>
                    <field>
                        <signature>winPEAS.NetworkInfo/FirewallProfiles</signature>
                        <name>DOMAIN</name>
                    </field>
                    <field>
                        <signature>winPEAS.NetworkInfo/FirewallProfiles</signature>
                        <name>PRIVATE</name>
                    </field>
                    <field>
                        <signature>winPEAS.NetworkInfo/FirewallProfiles</signature>
                        <name>PUBLIC</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.NetworkInfo/MIB_IPNETROW</name>
                <newname>b7/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dwAddr</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwIndex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwPhysAddrLen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwType</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac7</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ProcessesInfo</name>
                <newname>b8</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CloseHandle</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetProcInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Diagnostics.Process)</signature>
                        <name>GetProcU</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, native int&amp;)</signature>
                        <name>OpenProcessToken</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>defensiveProcesses</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>interestingProcesses</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ProcessesInfo/&lt;&gt;c</name>
                <newname>b8/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Diagnostics.Process)</signature>
                        <name>&lt;GetProcInfo&gt;b__5_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Management.ManagementObject)</signature>
                        <name>&lt;GetProcInfo&gt;b__5_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType0`4&lt;System.Diagnostics.Process,string,string,string&gt;(System.Diagnostics.Process, System.Management.ManagementObject)</signature>
                        <name>&lt;GetProcInfo&gt;b__5_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>winPEAS.ProcessesInfo/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Diagnostics.Process,int32&gt;</signature>
                        <name>&lt;&gt;9__5_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Management.ManagementObject,int32&gt;</signature>
                        <name>&lt;&gt;9__5_1</name>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;System.Diagnostics.Process,System.Management.ManagementObject,&lt;&gt;f__AnonymousType0`4&lt;System.Diagnostics.Process,string,string,string&gt;&gt;</signature>
                        <name>&lt;&gt;9__5_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Program</name>
                <newname>b9</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintBrowserInfo&gt;g__PrintDBsChrome|47_2</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintBrowserInfo&gt;g__PrintDBsFirefox|47_0</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintBrowserInfo&gt;g__PrintHistBookChrome|47_3</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintBrowserInfo&gt;g__PrintHistFavIE|47_5</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintBrowserInfo&gt;g__PrintHistFirefox|47_1</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintBrowserInfo&gt;g__PrinteCurrentIETabs|47_4</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoApplications&gt;g__PrintActiveWindow|44_0</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoApplications&gt;g__PrintAutoRuns|44_2</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoApplications&gt;g__PrintDeviceDrivers|44_4</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoApplications&gt;g__PrintInstalledApps|44_1</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoApplications&gt;g__PrintScheduled|44_3</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoNetwork&gt;g__PrintDNSCache|45_5</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoNetwork&gt;g__PrintFirewallRules|45_4</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoNetwork&gt;g__PrintHostsFile|45_1</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoNetwork&gt;g__PrintListeningPorts|45_3</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoNetwork&gt;g__PrintNetShares|45_0</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoNetwork&gt;g__PrintNetworkIfaces|45_2</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoProcesses&gt;g__PrintInterestingProcesses|42_0</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(winPEAS.Program/&lt;&gt;c__DisplayClass43_0&amp;)</signature>
                        <name>&lt;PrintInfoServices&gt;g__PrintInterestingServices|43_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(winPEAS.Program/&lt;&gt;c__DisplayClass43_0&amp;)</signature>
                        <name>&lt;PrintInfoServices&gt;g__PrintModifiableServices|43_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoServices&gt;g__PrintPathDLLHijacking|43_3</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoServices&gt;g__PrintWritableRegServices|43_2</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintAutoLogin|41_7</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintCU|41_1</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintClipboardText|41_3</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintEverLoggedUsers|41_6</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintHomeFolders|41_8</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintLoggedUsers|41_4</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintPasswordPolicies|41_9</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintRdpSessions|41_5</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__PrintTokenP|41_2</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>&lt;PrintInfoUsers&gt;g__colorsU|41_0</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintCachedGPPPassword|48_8</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintCloudCreds|48_3</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintConsoleHostHistory|48_5</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintMcAffeSitelistFiles|48_7</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintPossCredsRegs|48_9</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintPuttySSH|48_1</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintPuttySess|48_0</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintRecentFiles|48_14</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintRecycleBin|48_11</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintSAMBackups|48_6</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintSSHKeysReg|48_2</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintUnattendFiles|48_4</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintUserCredsFiles|48_10</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintUsersDocsKeys|48_13</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintInterestingFiles&gt;g__PrintUsersInterestingFiles|48_12</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintAVInfo|40_13</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintAuditInfo|40_2</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintBasicSystemInfo|40_0</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintCachedCreds|40_8</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintCredentialGuard|40_7</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintDrivesInfo|40_12</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintInetInfo|40_11</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintLAPSInfo|40_4</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintLSAProtection|40_6</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintPSInfo|40_1</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintSystemEV|40_10</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintUACInfo|40_14</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintUserEV|40_9</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintWEFInfo|40_3</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintSystemInfo&gt;g__PrintWdigest|40_5</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintAlwaysInstallElevated|46_13</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintAppCmd|46_11</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintCredManag|46_1</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintDPAPIMasterKeys|46_5</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintDpapiCredFiles|46_6</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintKerberosTGTTickets|46_9</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintKerberosTickets|46_8</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintRCManFiles|46_7</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintRecentRunCommands|46_3</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintSCClient|46_12</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintSavedRDPInfo|46_2</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintTranscriptPS|46_4</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintWSUS|46_14</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintWifi|46_10</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PrintWindowsCreds&gt;g__PrintvaultCreds|46_0</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckRegANSI</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateDynamicLists</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintBrowserInfo</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInfoApplications</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInfoNetwork</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInfoProcesses</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInfoServices</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInfoUsers</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintInterestingFiles</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintSystemInfo</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintWindowsCreds</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>waitInput</name>
                        <newname>bw</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>advisory</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>badIps</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>badLAPS</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>badPrivileges</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>badUAC</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>badgroups</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>badpasswd</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>banner</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>commonShares</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>complete_patterns_file_creds</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>credStringsRegex</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentADDomainName</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentUserDomainName</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>currentUserIsLocal</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentUserName</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>currentUserSIDs</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>exec_cmd</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>goodUAC</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>notcolor</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paint_activeUsers</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paint_activeUsers_no_Administrator</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paint_adminUsers</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paint_disabledUsers</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paint_disabledUsers_no_Administrator</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>partofdomain</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>patterns_file_creds</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>patterns_file_creds_color</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>print_credStrings</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>print_credStrings_limited</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Management.SelectQuery</signature>
                        <name>query</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>search_fast</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>search_time</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectSearcher</signature>
                        <name>searcher</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strFalse</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strTrue</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection</signature>
                        <name>win32_users</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Program/&lt;&gt;c__DisplayClass43_0</name>
                <newname>b9/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>mod_services</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ActionTypeComHandler</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ActionTypeExecute</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ActionTypeSendEmail</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ActionTypeShowMessage</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComHandlerAction</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DOWAllDays</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EmailAction</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndSentence</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error_TriggerEndBeforeStart</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExecAction</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HyphenSeparator</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ListSeparator</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MOYAllMonths</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MultipleActions</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MultipleTriggers</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ShowMessageAction</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskDefaultPrincipal</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskStateDisabled</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskStateQueued</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskStateReady</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskStateRunning</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TaskStateUnknown</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerAnyUser</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerBoot1</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerCustom1</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerDaily1</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerDaily2</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerDuration0</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerDurationNot0</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerDurationNot0Short</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerEndBoundary</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerEvent1</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerEventBasic1</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerEventBasic2</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerEventBasic3</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerIdle1</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerLogon1</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerMonthly1</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerMonthlyDOW1</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerRegistration1</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerRepetition</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerRepetitionShort</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionConsoleConnect</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionConsoleDisconnect</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionRemoteConnect</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionRemoteDisconnect</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionSessionLock</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionSessionUnlock</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerSessionUserSession</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTime1</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeBoot</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeCustom</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeDaily</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeEvent</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeIdle</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeLogon</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeMonthly</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeMonthlyDOW</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeRegistration</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeSessionStateChange</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeTime</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerTypeWeekly</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerWeekly1Week</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TriggerWeeklyMultWeeks</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWAllWeeks</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWFifthWeek</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWFirstWeek</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWFourthWeek</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWLastWeek</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWSecondWeek</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WWThirdWeek</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ActionTypeComHandler</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ActionTypeExecute</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ActionTypeSendEmail</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ActionTypeShowMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ComHandlerAction</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DOWAllDays</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EmailAction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EndSentence</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Error_TriggerEndBeforeStart</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExecAction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HyphenSeparator</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ListSeparator</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MOYAllMonths</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MultipleActions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MultipleTriggers</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ShowMessageAction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskDefaultPrincipal</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskStateDisabled</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskStateQueued</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskStateReady</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskStateRunning</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TaskStateUnknown</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerAnyUser</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerBoot1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerCustom1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerDaily1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerDaily2</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerDuration0</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerDurationNot0</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerDurationNot0Short</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerEndBoundary</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerEvent1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerEventBasic1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerEventBasic2</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerEventBasic3</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerIdle1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerLogon1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerMonthly1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerMonthlyDOW1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerRegistration1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerRepetition</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerRepetitionShort</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionConsoleConnect</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionConsoleDisconnect</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionRemoteConnect</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionRemoteDisconnect</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionSessionLock</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionSessionUnlock</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerSessionUserSession</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTime1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeBoot</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeCustom</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeDaily</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeEvent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeIdle</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeLogon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeMonthly</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeMonthlyDOW</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeRegistration</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeSessionStateChange</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerTypeWeekly</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerWeekly1Week</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TriggerWeeklyMultWeeks</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWAllWeeks</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWFifthWeek</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWFirstWeek</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWFourthWeek</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWLastWeek</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWSecondWeek</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WWThirdWeek</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer</name>
                <methodlist>
                    <method>
                        <signature>void(string, winPEAS.SamServer/SERVER_ACCESS_MASK)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(winPEAS.SamServer/NTSTATUS)</signature>
                        <name>Check</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>EnumerateDomains</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/DOMAIN_PASSWORD_INFORMATION(System.Security.Principal.SecurityIdentifier)</signature>
                        <name>GetDomainPasswordInformation</name>
                    </method>
                    <method>
                        <signature>System.Security.Principal.SecurityIdentifier(string)</signature>
                        <name>GetDomainSid</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int)</signature>
                        <name>SamCloseHandle</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(winPEAS.SamServer/UNICODE_STRING, native int&amp;, winPEAS.SamServer/SERVER_ACCESS_MASK, native int)</signature>
                        <name>SamConnect</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int, int32&amp;, native int&amp;, int32, int32&amp;)</signature>
                        <name>SamEnumerateDomainsInSamServer</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int)</signature>
                        <name>SamFreeMemory</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int, winPEAS.SamServer/UNICODE_STRING, native int&amp;)</signature>
                        <name>SamLookupDomainInSamServer</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int, winPEAS.SamServer/DOMAIN_ACCESS_MASK, unsigned int8[], native int&amp;)</signature>
                        <name>SamOpenDomain</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int, winPEAS.SamServer/DOMAIN_INFORMATION_CLASS, native int&amp;)</signature>
                        <name>SamQueryInformationDomain</name>
                    </method>
                    <method>
                        <signature>winPEAS.SamServer/NTSTATUS(native int, winPEAS.SamServer/DOMAIN_INFORMATION_CLASS, native int)</signature>
                        <name>SamSetInformationDomain</name>
                    </method>
                    <method>
                        <signature>void(System.Security.Principal.SecurityIdentifier, winPEAS.SamServer/DOMAIN_PASSWORD_INFORMATION)</signature>
                        <name>SetDomainPasswordInformation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>_handle</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/&lt;EnumerateDomains&gt;d__9</name>
                <newname>winPEAS.SamServer/e</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;cookie&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/UNICODE_STRING</signature>
                        <name>&lt;us&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/DOMAIN_ACCESS_MASK</name>
                <newname>winPEAS.SamServer/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_ADMINISTER_SERVER</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_ALL_ACCESS</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_CREATE_ALIAS</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_CREATE_GROUP</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_CREATE_USER</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_EXECUTE</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_GET_ALIAS_MEMBERSHIP</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_LIST_ACCOUNTS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_LOOKUP</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_READ</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_READ_OTHER_PARAMETERS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_READ_PASSWORD_PARAMETERS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_WRITE</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_WRITE_OTHER_PARAMETERS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_ACCESS_MASK</signature>
                        <name>DOMAIN_WRITE_PASSWORD_PARAMS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/DOMAIN_INFORMATION_CLASS</name>
                <newname>winPEAS.SamServer/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.SamServer/DOMAIN_INFORMATION_CLASS</signature>
                        <name>DomainPasswordInformation</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/DOMAIN_PASSWORD_INFORMATION</name>
                <methodlist>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_MaxPasswordAge</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_MinPasswordAge</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_MaxPasswordAge</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_MinPasswordAge</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>MinPasswordLength</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>PasswordHistoryLength</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>PasswordProperties</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_maxPasswordAge</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_minPasswordAge</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>MaxPasswordAge</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>MinPasswordAge</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/NTSTATUS</name>
                <newname>winPEAS.SamServer/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_ACCESS_DENIED</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_INVALID_HANDLE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_INVALID_PARAMETER</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_MORE_ENTRIES</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_NO_SUCH_DOMAIN</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_OBJECT_TYPE_MISMATCH</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/NTSTATUS</signature>
                        <name>STATUS_SUCCESS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/PASSWORD_PROPERTIES</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>DOMAIN_LOCKOUT_ADMINS</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>DOMAIN_PASSWORD_COMPLEX</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>DOMAIN_PASSWORD_NO_ANON_CHANGE</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>DOMAIN_PASSWORD_NO_CLEAR_CHANGE</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>DOMAIN_PASSWORD_STORE_CLEARTEXT</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/PASSWORD_PROPERTIES</signature>
                        <name>DOMAIN_REFUSE_PASSWORD_CHANGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/SERVER_ACCESS_MASK</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_ALL_ACCESS</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_CONNECT</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_CREATE_DOMAIN</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_ENUMERATE_DOMAINS</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_EXECUTE</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_INITIALIZE</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_LOOKUP_DOMAIN</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_READ</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_SHUTDOWN</name>
                    </field>
                    <field>
                        <signature>winPEAS.SamServer/SERVER_ACCESS_MASK</signature>
                        <name>SAM_SERVER_WRITE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SamServer/UNICODE_STRING</name>
                <newname>winPEAS.SamServer/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>Buffer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.ServicesInfo</name>
                <newname>ca</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetModifiableServices</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetNonstandardServices</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetNonstandardServicesFromReg</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetPathDLLHijacking</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GetWriteServiceRegs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(native int, System.Security.AccessControl.SecurityInfos, unsigned int8[], unsigned int32, unsigned int32&amp;)</signature>
                        <name>QueryServiceObjectSecurity</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.SystemInfo</name>
                <newname>cb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetAVInfo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetAuditSettings</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetBasicOSInfo</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetDrivesInfo</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string)</signature>
                        <name>GetInternetSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetLapsSettings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetPowerShellSettings</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetSystemEnvVariables</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetUACSystemPolicies</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetUserEnvVariables</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetWEFSettings</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsVirtualMachine</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo</name>
                <newname>cc</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>CloseServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetAutoLogon</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetClipboardText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetEverLoggedUsers</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetLoggedUsers</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(bool, bool, bool, bool, bool)</signature>
                        <name>GetMachineUsers</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetPasswordPolicy</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.DirectoryServices.AccountManagement.PrincipalContext()</signature>
                        <name>GetPrincipalContext</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetRDPSessions</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(string, System.DirectoryServices.AccountManagement.ContextType)</signature>
                        <name>GetSIDGroupName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>GetTokenGroupPrivs</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(native int, winPEAS.UserInfo/TOKEN_INFORMATION_CLASS, native int, int32, int32&amp;)</signature>
                        <name>GetTokenInformation</name>
                    </method>
                    <method>
                        <signature>System.DirectoryServices.AccountManagement.UserPrincipal(string, string)</signature>
                        <name>GetUser</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.DirectoryServices.AccountManagement.UserPrincipal(string, string)</signature>
                        <name>GetUserDomain</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>GetUserGroups</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.DirectoryServices.AccountManagement.UserPrincipal(string)</signature>
                        <name>GetUserLocal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetUsersFolders</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>IsLocaluser</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string, native int, System.Text.StringBuilder, int32&amp;)</signature>
                        <name>LookupPrivilegeName</name>
                    </method>
                    <method>
                        <signature>native int(string)</signature>
                        <name>OpenServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>SID2GroupName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>WTSCloseServer</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32&amp;, int32, native int&amp;, int32&amp;)</signature>
                        <name>WTSEnumerateSessionsEx</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>WTSFreeMemory</name>
                    </method>
                    <method>
                        <signature>native int(string)</signature>
                        <name>WTSOpenServer</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, winPEAS.UserInfo/WTS_INFO_CLASS, native int&amp;, unsigned int32&amp;)</signature>
                        <name>WTSQuerySessionInformation</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>staticSID2GroupName</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/LUID</name>
                <newname>cc/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>HighPart</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LowPart</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/LUID_AND_ATTRIBUTES</name>
                <newname>cc/f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Attributes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/LUID</signature>
                        <name>Luid</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/LuidAttributes</name>
                <newname>cc/LuidAttributes</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.UserInfo/LuidAttributes</signature>
                        <name>DISABLED</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_ENABLED</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_ENABLED_BY_DEFAULT</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_REMOVED</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_USED_FOR_ACCESS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</name>
                <newname>cc/g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenAuditPolicy</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenDefaultDacl</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenGroups</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenGroupsAndPrivileges</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenImpersonationLevel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenOrigin</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenOwner</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenPrimaryGroup</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenPrivileges</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenRestrictedSids</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSandBoxInert</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSessionId</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSessionReference</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSource</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenStatistics</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenType</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenUser</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/TOKEN_PRIVILEGES</name>
                <newname>cc/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PrivilegeCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/LUID_AND_ATTRIBUTES[]</signature>
                        <name>Privileges</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/WTS_CLIENT_ADDRESS</name>
                <newname>cc/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Address</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>AddressFamily</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</name>
                <newname>cc/WTS_CONNECTSTATE_CLASS</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Active</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>ConnectQuery</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Connected</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Disconnected</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Down</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Idle</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Init</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Listen</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Reset</name>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Shadow</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/WTS_INFO_CLASS</name>
                <newname>cc/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSApplicationName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientAddress</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientBuildNumber</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientDirectory</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientDisplay</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientHardwareId</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientInfo</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientName</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientProductId</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSClientProtocolType</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSConfigInfo</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSConnectState</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSDomainName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSIdleTime</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSIncomingBytes</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSIncomingFrames</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSInitialProgram</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSIsRemoteSession</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSLogonTime</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSOEMId</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSOutgoingBytes</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSOutgoingFrames</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSSessionAddressV4</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSSessionId</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSSessionInfo</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSSessionInfoEx</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSUserName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSValidationInfo</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSWinStationName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_INFO_CLASS</signature>
                        <name>WTSWorkingDirectory</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.UserInfo/WTS_SESSION_INFO_1</name>
                <newname>cc/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ExecEnvId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SessionID</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>winPEAS.UserInfo/WTS_CONNECTSTATE_CLASS</signature>
                        <name>State</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pDomainName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pFarmName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pHostName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pSessionName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pUserName</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Vulnerability</name>
                <methodlist>
                    <method>
                        <signature>void(string, string[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetAsVulnerable</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Identification</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_KnownExploits</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Vulnerable</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Vulnerable</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Identification&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;KnownExploits&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Vulnerable&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Identification</name>
                    </property>
                    <property>
                        <signature>string[]()</signature>
                        <name>KnownExploits</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Vulnerable</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>winPEAS.VulnerabilityCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;winPEAS.Vulnerability&gt;()</signature>
                        <name>Populate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetAsVulnerable</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowResults</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;winPEAS.Vulnerability&gt;</signature>
                        <name>_vulnerabilities</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.VulnerabilityCollection/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(winPEAS.Vulnerability)</signature>
                        <name>&lt;ShowResults&gt;b__3_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(winPEAS.Vulnerability)</signature>
                        <name>&lt;ShowResults&gt;b__3_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(winPEAS.Vulnerability)</signature>
                        <name>&lt;ShowResults&gt;b__3_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>winPEAS.VulnerabilityCollection/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;winPEAS.Vulnerability,bool&gt;</signature>
                        <name>&lt;&gt;9__3_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;winPEAS.Vulnerability,bool&gt;</signature>
                        <name>&lt;&gt;9__3_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;winPEAS.Vulnerability,bool&gt;</signature>
                        <name>&lt;&gt;9__3_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.VulnerabilityCollection/&lt;&gt;c__DisplayClass1_0</name>
                <newname>winPEAS.VulnerabilityCollection/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(winPEAS.Vulnerability)</signature>
                        <name>&lt;SetAsVulnerable&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>id</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Watson</name>
                <newname>cm</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FindVulns</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>winPEAS.Wmi</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBuildNumber</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetInstalledKBs</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>305</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>2210</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>1245</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>312</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>7</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>207</statistic>
            <statistic>67.87 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>1208</statistic>
            <statistic>54.66 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>748</statistic>
            <statistic>60.08 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>270</statistic>
            <statistic>12.22 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>93</statistic>
            <statistic>4.21 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>92</statistic>
            <statistic>4.16 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>79</statistic>
            <statistic>3.57 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>55</statistic>
            <statistic>2.49 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>47</statistic>
            <statistic>2.13 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'h'</description>
            <statistic>36</statistic>
            <statistic>1.63 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>